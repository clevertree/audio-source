(function(){class AudioSourceComposerElement extends HTMLElement{constructor(){super(),this.versionString="-1",this.eventHandlers=[],this.saveSongToMemoryTimer=null,this.instrumentLibrary=null,this.longPressTimeout=null,this.webSocket=new AudioSourceComposerWebsocket(this),this.keyboard=new AudioSourceComposerKeyboard(this),this.renderer=new AudioSourceSong({},this),this.status={groupHistory:[],currentOctave:3,currentInstrumentID:0,currentRenderDuration:null,previewInstructionsOnSelect:!1,longPressTimeout:500,doubleClickTimeout:500,autoSaveTimeout:4e3},this.shadowDOM=null,this.values=new AudioSourceValues(this.renderer),this.loadDefaultInstrumentLibrary(),this.loadPackageInfo()}get tracker(){return this.shadowDOM.querySelector("asc-tracker")}get containerElm(){return this.shadowDOM.querySelector(".asc-container")}get scriptDirectory(){return(new AudioSourceLibraries).getScriptDirectory("")}get sampleLibraryURL(){return this.getAttribute("sampleLibraryURL")||this.scriptDirectory("sample/sample.library.json")}set sampleLibraryURL(e){this.setAttribute("sampleLibraryURL",e)}connectedCallback(){this.shadowDOM=this.attachShadow({mode:"open"}),this.attachEventHandler(["change","submit","focus"],e=>this.onInput(e),this.shadowDOM,!0),this.attachEventHandler(["song:loaded","song:play","song:end","song:stop","song:modified","song:seek","note:start","note:end"],this.onSongEvent),this.attachEventHandler(["instrument:instance","instrument:library","instrument:modified","instrument:loaded"],e=>this.onSongEvent(e),document),this.render(),this.focus(),this.loadDefaultSong(),navigator.requestMIDIAccess&&navigator.requestMIDIAccess().then(e=>{console.info("MIDI initialized",e);const t=[];e.inputs.forEach(e=>{t.push(e),e.addEventListener("midimessage",e=>this.onInput(e))}),console.log("MIDI input devices detected: "+t.map(e=>e.name).join(", "))},e=>{this.onError("error initializing MIDI: "+e)})}disconnectedCallback(){this.eventHandlers.forEach(e=>e[2].removeEventListener(e[0],e[1]))}attachEventHandler(e,t,n,s=null){Array.isArray(e)||(e=[e]);for(let r=0;r<e.length;r++){const o=e[r];(n=n||this).addEventListener(o,t,s),this.eventHandlers.push([o,t,n])}}async loadDefaultInstrumentLibrary(){const e=(new AudioSourceLibraries).getScriptDirectory("instrument/instrument.library.json");await this.loadInstrumentLibrary(e),this.renderer.dispatchEvent(new CustomEvent("instrument:library",{}))}async loadDefaultSong(){const e=this.getAttribute("src");if(e)try{return await this.loadSongFromSrc(e),!0}catch(t){console.error("Failed to load from src: ",e,t)}return!!await this.loadRecentSongData()||(this.loadNewSongData(),!1)}get currentGroup(){return this.status.currentGroup}get selectedIndicies(){return this.status.selectedIndicies}get selectedRange(){return this.status.selectedRange}getAudioContext(){return this.renderer.getAudioContext()}getSongData(){return this.renderer.data}getDefaultInstrumentURL(){return new URL(this.scriptDirectory+"instrument/audio-source-synthesizer.js",document.location)}loadNewSongData(){const e=new AudioSourceStorage,t=this.getDefaultInstrumentURL()+"";let n=e.generateDefaultSong(t);this.renderer.loadSongData(n),this.render(),this.setStatus("Loaded new song",n)}async loadRecentSongData(){const e=new AudioSourceStorage;let t=await e.getRecentSongList();return!(!t[0]||!t[0].guid)&&(this.setStatus("Loading recent song: "+t[0].guid),await this.loadSongFromMemory(t[0].guid),!0)}async saveSongToMemory(){const e=this.renderer.data,t=this.renderer.getSongHistory(),n=new AudioSourceStorage;this.setStatus("Saving song to memory: "+e.guid),await n.saveSongToMemory(e,t)}saveSongToFile(){const e=this.renderer.data,t=new AudioSourceStorage;this.setStatus("Saving song to file"),t.saveSongToFile(e)}async loadSongFromMemory(e){const t=new AudioSourceStorage,n=await t.loadSongFromMemory(e),s=await t.loadSongHistoryFromMemory(e);this.renderer.loadSongData(n),this.renderer.loadSongHistory(s),this.render(),this.setStatus("Song loaded from memory: "+e,n)}async loadSongFromFileInput(e){const t=e.name.split(".").pop().toLowerCase();switch(t){case"mid":case"midi":await this.loadSongFromMIDIFileInput(e);break;case"json":await this.loadSongFromJSONFileInput(e);break;default:throw new Error("Unknown file type: "+t)}}async loadSongFromJSONFileInput(e){const t=new AudioSourceStorage,n=await t.loadJSONFile(e);this.renderer.loadSongData(n),this.render(),this.setStatus("Song loaded from file: ",n)}async loadSongFromMIDIFileInput(e,t=null){t=t||this.getDefaultInstrumentURL();const n=new MIDISupport,s=await n.loadSongFromMidiFile(e,t);this.renderer.loadSongData(s),this.render(),this.setStatus("Song loaded from midi: ",s)}async loadSongFromSrc(e){e=new URL(e,document.location)+"";const t=await new Promise((t,n)=>{const s=new XMLHttpRequest;s.open("GET",e+"",!0),s.responseType="json",s.onload=(()=>{if(200!==s.status)return n("Song file not found: "+url);t(s.response)}),s.send()});this.renderer.loadSongData(t,e),this.setStatus("Song loaded from src: "+e),console.info(this.renderer.songData),this.render()}async play(){await this.renderer.play();let e=setInterval(t=>{this.renderer.isPlaying?this.updateSongPositionValue():clearInterval(e)},10)}updateSongPositionValue(){let e=this.renderer.songPlaybackPosition,t=Math.floor(e/60);e%=60;let n=Math.round(1e3*(e-Math.floor(e)));e=Math.floor(e),t=(t+"").padStart(2,"0"),e=(e+"").padStart(2,"0"),n=(n+"").padStart(4,"0"),this.fieldSongPosition.value=`${t}:${e}:${n}`}onInput(e){if(!e.defaultPrevented)switch(this.renderer.getAudioContext(),e.type){case"submit":e.preventDefault(),this.onSubmit(e);break;case"change":case"blur":e.target.form&&e.target.form.classList.contains("submit-on-"+e.type)&&this.onSubmit(e);break;case"focus":for(let t=0;t<e.path.length;t++){const n=e.path[t];if(n.classList&&n.classList.contains("instrument-container")){n.classList.contains("selected")||(n.parentNode.querySelectorAll(".instrument-container.selected").forEach(e=>e.classList.remove("selected")),n.classList.add("selected"),setTimeout(e=>n.parentNode.scrollLeft=n.offsetLeft-20,1));break}}break;default:this.tracker&&this.tracker.onInput(e)}}onSongEvent(e){switch(this.tracker&&this.tracker.onSongEvent(e),e.type){case"song:seek":this.updateSongPositionValue();break;case"song:loaded":this.tracker.renderDuration=this.renderer.getSongTimeDivision();break;case"song:play":this.classList.add("playing"),this.containerElm.classList.add("playing"),clearInterval(this.updateSongPositionInterval),this.updateSongPositionInterval=setInterval(e=>{this.updateSongPositionValue()},10);break;case"song:pause":clearInterval(this.updateSongPositionInterval),this.classList.add("paused"),this.containerElm.classList.add("paused");break;case"song:end":clearInterval(this.updateSongPositionInterval),this.classList.remove("playing","paused"),this.containerElm.classList.remove("playing","paused");break;case"instrument:modified":case"song:modified":switch(e.type){case"instrument:modified":this.renderInstruments(),this.tracker&&this.tracker.renderForms()}clearTimeout(this.saveSongToMemoryTimer),this.saveSongToMemoryTimer=setTimeout(e=>this.saveSongToMemory(e),this.status.autoSaveTimeout);break;case"instrument:loaded":case"instrument:instance":this.renderInstruments(),this.tracker&&this.tracker.renderForms();break;case"instrument:library":this.renderSongForms(),this.tracker&&this.tracker.renderForms()}}onSubmit(e,t){if(t||(t=e.target.form||e.target),!t.matches("form"))throw new Error("Invalid Form: "+t);const n=t.getAttribute("data-action");this.onAction(e,n)}async onAction(e,t,n=null){if(this.setStatus("Action: "+t),this.tracker.onAction(e,t))return!0;switch(t){case"song:new":e.preventDefault(),this.loadNewSongData();break;case"song:load-memory-uuid":e.preventDefault();let s=e.target.getAttribute("data-uuid")||null;this.loadSongFromMemory(s);break;case"song:save-to-memory":e.preventDefault(),this.saveSongToMemory();break;case"song:save-to-file":e.preventDefault(),this.saveSongToFile();break;case"song:load-from-file":case"song:load-from-midi-file":this.closeAllMenus();const r=((e.target.form?e.target.form.querySelector("input[type=file]"):null)||e.target).files[0];if(!r)throw new Error("No file selected");await this.loadSongFromFileInput(r);break;case"song:edit":this.renderer.replaceDataPath("beatsPerMinute",form["beats-per-minute"].value),this.renderer.replaceDataPath("beatsPerMeasure",form["beats-per-measure"].value);break;case"song:play":case"song:resume":this.play();break;case"song:pause":this.renderer.stopPlayback();break;case"song:stop":case"song:reset":this.renderer.stopPlayback(),this.renderer.setPlaybackPositionInTicks(0);break;case"song:playback":console.log(e.target);break;case"song:volume":this.renderer.setVolume(this.fieldSongVolume.value);break;case"song:add-instrument":const o=n||e.target.form.elements.instrumentURL.value;if(!o){console.error("Empty URL");break}e.target.form.elements.instrumentURL.value="",confirm(`Add Instrument to Song?\nURL: ${o}`)?(this.renderer.addInstrument(o),this.setStatus("New instrument Added to song: "+o)):this.setStatus(`<span style='color: red'>New instrument canceled: ${o}</span>`);break;case"song:replace-instrument":const i=n||e.target.form.elements.instrumentURL.value;if(!i){this.setStatus("<span style='color: red'>Empty URL</span>");break}const a=n||{url:i,id:parseInt(e.target.form.elements.instrumentID.value)};a.title=a.url.split("/").pop(),this.status.currentInstrumentID=this.renderer.replaceInstrument(a.id,a.url),this.setStatus(`Instrument (${a.id}) changed to: ${i}`),this.tracker&&(this.tracker.fieldInstructionInstrument.value=a.id);break;case"song:remove-instrument":const c=n||parseInt(e.target.form.elements.instrumentID.value);confirm(`Remove Instrument ID: ${c}`)?(this.renderer.removeInstrument(c),this.setStatus(`Instrument (${a.id}) removed`)):this.setStatus("<span style='color: red'>Remove instrument canceled</span>");break;case"song:set-title":const l=e.target.form.elements.title.value;this.renderer.setSongTitle(l),this.setStatus(`Song title updated: ${l}`);break;case"song:set-version":const u=e.target.form.elements.title.value;this.renderer.setSongVersion(u),this.setStatus(`Song version updated: ${u}`);break;case"toggle:control-song":this.classList.toggle("hide-control-song");break;case"toggle:control-tracker":this.classList.toggle("hide-control-tracker");break;case"view:fullscreen":const d=this.classList.contains("fullscreen");this.classList.toggle("fullscreen",!d),this.containerElm.classList.toggle("fullscreen",!d),this.tracker&&this.tracker.render();break;case"view:forms-song":this.containerElm.classList.toggle("hide-forms-song");break;case"view:forms-tracker":this.containerElm.classList.toggle("hide-forms-tracker");break;case"view:forms-instruments":this.containerElm.classList.toggle("hide-forms-instruments");break;default:console.warn("Unhandled "+e.type+": ",t)}}onError(e){console.error(e),this.setStatus(`<span style="red">${e}</span>`),this.webSocket&&this.webSocket.onError(e)}get statusElm(){return this.shadowDOM.querySelector(".asc-status-container .status-text")}get versionElm(){return this.shadowDOM.querySelector(".asc-status-container .version-text")}get menuFile(){return this.shadowDOM.querySelector('asc-menu[key="file"]')}get menuEdit(){return this.shadowDOM.querySelector('asc-menu[key="edit"]')}get menuView(){return this.shadowDOM.querySelector('asc-menu[key="view"]')}get menuInstrument(){return this.shadowDOM.querySelector('asc-menu[key="instrument"]')}get menuContext(){return this.shadowDOM.querySelector('asc-menu[key="context"]')}get formsSong(){return this.shadowDOM.querySelector(".form-section-container-song")}get formsTracker(){return this.shadowDOM.querySelector(".form-section-container-tracker")}get formsInstruments(){return this.shadowDOM.querySelector(".form-section-container-instruments")}render(){const e=(new AudioSourceLibraries).getScriptDirectory("composer/audio-source-composer.css");this.shadowDOM.innerHTML=`\n        <link rel="stylesheet" href="${e}" />\n        <div class="asc-container">\n            <div class="asc-menu-container">\n                <asc-menu key="file" caption="File"></asc-menu>\n                <asc-menu key="edit" caption="Edit"></asc-menu>\n                <asc-menu key="view" caption="View"></asc-menu>\n                <asc-menu key="instrument" caption="Instrument"></asc-menu>\n                <asc-menu key="context" caption=""></asc-menu>\n            </div>\n            <div class="form-section-divide"><span>Song</span></div>\n            <div class="form-section-container form-section-container-song"></div>\n\n            <div class="form-section-divide"><span>Track</span></div>\n            <div class="form-section-container form-section-container-tracker"></div>\n\n            <div class="form-section-divide"><span>Instruments</span></div>\n            <div class="form-section-container form-section-container-instruments"></div>\n\n            <hr style="flex-basis:100%; margin: 1px;" />\n            <asc-tracker tabindex="0" group="root"></asc-tracker>\n        </div>\n        <div class="asc-status-container">\n            <span class="status-text"></span>\n            <a href="https://github.com/clevertree/audio-source-composer" target="_blank" class="version-text">${this.versionString}</a>\n        </div>\n        `,this.containerElm.classList.toggle("fullscreen",this.classList.contains("fullscreen")),this.renderMenu(),this.renderSongForms(),this.renderInstruments()}setStatus(e){console.info.apply(null,arguments),this.statusElm.innerHTML=e}setVersion(e){this.versionString=e,this.statusElm.innerHTML=e}closeAllMenus(){this.shadowDOM.querySelector("asc-menu").closeAllMenus()}get fieldSongVolume(){return this.formsSong.querySelector("form.form-song-volume input[name=volume]")}get fieldSongAddInstrument(){return this.formsSong.querySelector("form.form-song-add-instrument select[name=instrumentURL]")}get fieldSongPosition(){return this.formsSong.querySelector("form.form-song-playback-position input[name=position]")}renderSongForms(){const e=this.formsSong,t=this.renderer,n=this.data;e.innerHTML=`\n            <div class="form-section control-song">\n                <div class="form-section-header">Playback</div>\n                <form action="#" class="form-song-play hide-on-song-playing" data-action="song:play">\n                    <button type="submit" name="play" class="themed">\n                        <i class="ui-icon ui-play"></i>\n                    </button>\n                </form>\n                <form action="#" class="form-song-pause show-on-song-playing" data-action="song:pause">\n                    <button type="submit" name="pause" class="themed">\n                        <i class="ui-icon ui-pause"></i>\n                    </button>\n                </form>\n                <form action="#" class="form-song-stop" data-action="song:stop">\n                    <button type="submit" name="pause" class="themed">\n                        <i class="ui-icon ui-stop"></i>\n                    </button>\n                </form>\n            </div>\n                                         \n            \n            <div class="form-section control-song">\n                <div class="form-section-header">Position</div>\n                <form action="#" class="form-song-playback-position submit-on-change" data-action="song:set-position">\n                    <input name="position" type="text" class="themed" value="" placeholder="00:00:0000" />\n                </form>\n            </div>                \n            \n            <div class="form-section control-song">\n                <div class="form-section-header">Volume</div>\n                <form action="#" class="form-song-volume submit-on-change" data-action="song:volume">\n                    <div class="volume-container">\n                        <input name="volume" type="range" min="1" max="100" value="${t?t.getVolume():0}" class="themed">\n                    </div>\n                </form>\n            </div>\n            \n            <div class="form-section control-song">\n                <div class="form-section-header">File</div>\n                <form name="form-load-file" action="#" class="form-load-file submit-on-change" data-action="song:load-from-file">\n                    <label>\n                        <div class="input-style">\n                            <i class="ui-icon ui-file-load"></i>\n                        </div>\n                        <input type="file" name="file" accept=".json,.mid,.midi" style="display: none" />\n                    </label>\n                </form>\n                <form name="form-save-file" action="#" class="form-save-file submit-on-change" data-action="song:save-to-file">\n                    <button type="submit" name="save" class="themed">\n                        <i class="ui-icon ui-file-save"></i>\n                    </button>\n                </form>\n            </div>\n                          \n                                         \n            \n            <div class="form-section control-song">\n                <div class="form-section-header">Song Name</div>\n                <form action="#" class="form-song-title submit-on-change" data-action="song:set-title">\n                    <input name="name" type="text" class="themed" value="${n.name}" />\n                </form>\n            </div>     \n            \n            <div class="form-section control-song">\n                <div class="form-section-header">Version</div>\n                <form action="#" class="form-song-version submit-on-change" data-action="song:set-version">\n                    <input name="version" type="text" class="themed" value="${n.version}" />\n                </form>\n            </div>                \n             \n            \n            <div style="clear: both;" class="control-song"></div>\n        `}renderInstruments(){const e=this.formsInstruments,t=this.renderer;e.innerHTML="\n";const n=e,s=t.getInstrumentList();for(let e=0;e<s.length;e++){let s=document.createElement("div");s.classList.add("instrument-container"),s.classList.add("control-instrument"),s.setAttribute("tabindex","0"),n.appendChild(s),0===e&&s.classList.add("selected");let r=t.getInstrument(e,!1);const o=t.getInstrumentConfig(e,!1);if(s.innerHTML="",o)if(o.url)if(t.isInstrumentLoaded(e))try{if(r instanceof HTMLElement)r.setAttribute("data-id",e+""),s.appendChild(r);else{if(!r.render)throw new Error("No Renderer");{const t=r.render(this,e);t&&(s.innerHTML=t)}}}catch(e){s.innerHTML=e}else{const t=new EmptyInstrumentElement(e,"Loading...");s.appendChild(t)}else{const t=new EmptyInstrumentElement(e,"Invalid URL");s.appendChild(t)}else r=new EmptyInstrumentElement(e,"[Empty]"),s.appendChild(r)}e.appendChild(new EmptyInstrumentElement(s.length,"[Empty]"))}renderMenu(){this.menuFile.populate=(e=>{const t=e.menuElement;t.getOrCreateSubMenu("new","New song").action=(e=>this.onAction(e,"song:new"));const n=t.getOrCreateSubMenu("open","Open song ►");n.populate=(e=>{n.getOrCreateSubMenu("from Memory ►").populate=(async e=>{const t=e.menuElement,n=new AudioSourceStorage,s=await n.getRecentSongList();for(let e=0;e<s.length;e++){const n=s[e];t.getOrCreateSubMenu(n.guid,n.title).action=(e=>{this.loadSongFromMemory(n.guid)})}});n.getOrCreateSubMenu("from File",'<form name="form-menu-load-file" action="#" class="form-menu-load-file submit-on-change" data-action="song:load-from-file">\n                                <label>from File<input type="file" name="file" accept=".json" style="display: none"></label>\n                            </form>');n.getOrCreateSubMenu("from URL").disabled=!0});const s=t.getOrCreateSubMenu("save","Save song ►");s.populate=(e=>{s.getOrCreateSubMenu("to Memory").action=(e=>this.onAction(e,"song:save-to-memory")),s.getOrCreateSubMenu("to File").action=(e=>this.onAction(e,"song:save-to-file"))});const r=t.getOrCreateSubMenu("import","Import song ►");r.populate=(e=>{r.getOrCreateSubMenu("from MIDI File",'<form name="form-menu-load-file" action="#" class="form-menu-load-file submit-on-change" data-action="song:load-from-file">\n                                <label>from MIDI File<input type="file" name="file" accept=".mid,.midi" style="display: none"></label>\n                            </form>')});const o=t.getOrCreateSubMenu("export","Export song ►");o.disabled=!0,o.populate=(e=>{o.getOrCreateSubMenu("to MIDI File").disabled=!0})}),this.menuView.populate=(e=>{const t=e.menuElement;t.getOrCreateSubMenu("fullscreen",`${this.classList.contains("fullscreen")?"Disable":"Enable"} Fullscreen`).action=(e=>this.onAction(e,"view:fullscreen")),t.getOrCreateSubMenu("forms-song",`${this.containerElm.classList.contains("hide-forms-song")?"Show":"Hide"} Song Forms `).action=(e=>this.onAction(e,"view:forms-song")),t.getOrCreateSubMenu("forms-tracker",`${this.containerElm.classList.contains("hide-forms-tracker")?"Show":"Hide"} Track Forms`).action=(e=>this.onAction(e,"view:forms-tracker")),t.getOrCreateSubMenu("forms-instruments",`${this.containerElm.classList.contains("hide-forms-instruments")?"Show":"Hide"} Instrument Forms`).action=(e=>this.onAction(e,"view:forms-instruments"))}),this.menuInstrument.populate=(e=>{const t=e.menuElement;t.getOrCreateSubMenu("instrument","Add To Song ►").populate=(e=>{const t=e.menuElement;this.values.getValues("instruments-available",(e,n)=>{t.getOrCreateSubMenu(e,`${n}`).action=(t=>{this.fieldSongAddInstrument.value=e,this.onAction(t,"song:add-instrument",e)})})});let n=0;this.values.getValues("song-instruments",(e,s)=>{const r=this.renderer.isInstrumentLoaded(e),o=t.getOrCreateSubMenu(e,`${s} ►`);o.populate=(t=>{const n=t.menuElement;n.getOrCreateSubMenu("change","Replace ►").populate=(t=>{const n=t.menuElement;this.values.getValues("instruments-available",(t,s)=>{n.getOrCreateSubMenu(t,`${s}`).action=(n=>{this.fieldSongAddInstrument.value=t,this.onAction(n,"song:replace-instrument",{id:e,url:t})})})});const s=n.getOrCreateSubMenu("remove","Remove From Song");s.action=(t=>{this.onAction(t,"song:remove-instrument",e)}),s.disabled=!r}),0===n&&(o.hasBreak=!0),n++})})}update(){this.menu.update(),this.tracker.update()}selectGroup(e){this.status.groupHistory=this.status.groupHistory.filter(e=>e===this.status.currentGroup),this.status.groupHistory.unshift(this.status.currentGroup),this.status.currentGroup=e,console.log("Group Change: ",e,this.status.groupHistory),this.tracker.groupName=e,this.render()}selectInstructions(e=null){if(this.status.selectedIndicies=[],"number"==typeof e)this.status.selectedIndicies=[e];else{if(!Array.isArray(e)){if("function"==typeof e){let t=[];return this.renderer.eachInstruction(this.status.currentGroup,(n,s,r)=>{e(n,s,r)&&t.push(n)}),void this.selectedIndicies(t)}throw console.error("Invalid indicies",e)}this.status.selectedIndicies=e}this.update()}playSelectedInstructions(){this.renderer.stopPlayback();const e=this.status.selectedIndicies;for(let t=0;t<e.length;t++)this.renderer.playInstructionAtIndex(this.status.currentGroup,e[t])}async loadInstrumentLibrary(e,t=!1){if(!e)throw new Error("Invalid url");return e=new URL(e,document.location)+"",!t&&this.instrumentLibrary&&this.instrumentLibrary.url===e?this.instrumentLibrary:(this.instrumentLibrary=await this.loadJSON(e),this.instrumentLibrary.url=e+"",console.info("Instrument Library Loaded: ",this.instrumentLibrary),this.instrumentLibrary)}async loadPackageInfo(){const e=(new AudioSourceLibraries).getScriptDirectory("package.json"),t=await this.loadJSON(e);if(!t.version)throw new Error("Invalid package version: "+xhr.response);console.log("Package Version: ",t.version,t),this.setVersion(t.version)}async loadJSON(e){return e=new URL(e,document.location)+"",new Promise((t,n)=>{const s=new XMLHttpRequest;s.open("GET",e,!0),s.responseType="json",s.onload=(()=>{if(200!==s.status)return n("JSON file not found: "+e);t(s.response)}),s.send()})}loadCSS(){const e=this.shadowDOM||document.head;if(e.querySelector('link[href$="audio-source-composer.css"]'))return;const t=(new AudioSourceLibraries).getScriptDirectory("composer/audio-source-composer.css");let n=document.createElement("link");n.setAttribute("rel","stylesheet"),n.setAttribute("type","text/css"),n.setAttribute("href",t),e.appendChild(n)}}customElements.define("audio-source-composer",AudioSourceComposerElement);class EmptyInstrumentElement extends HTMLElement{constructor(e,t){super(),this.statusText=t,this.instrumentID=e}get instrumentID(){return this.getAttribute("data-id")}set instrumentID(e){return this.setAttribute("data-id",e)}connectedCallback(){this.addEventListener("submit",e=>this.editor.onInput(e)),this.render()}get editor(){const e=this.closest("div.asc-container").parentNode.host;if(!e)throw new Error("Editor not found");return e}render(){const e=this.instrumentID||"N/A",t=(e<10?"0":"")+e+":"+this.statusText;this.innerHTML=`\n            <div class="form-section control-song">\n                <form class="form-song-add-instrument submit-on-change" data-action="song:replace-instrument">\n                    <input type="hidden" name="instrumentID" value="${e}"/>\n                    ${t}\n                    <br/>\n                    <select name="instrumentURL" class="themed">\n                        <option value="">Select Instrument</option>\n                        ${this.editor.values.renderEditorFormOptions("instruments-available")}\n                    </select>\n                </form>\n            </div>\n\n        `}}customElements.define("asc-instrument-empty",EmptyInstrumentElement);class AudioSourceComposerTracker extends HTMLElement{constructor(){super(),this.editor=null,this.eventHandlers=[],this.segmentLength=16,this.currentRowSegmentID=0,this.mousePosition={},this.rowContainer=null}get groupName(){return this.getAttribute("group")}set groupName(e){this.setAttribute("group",e),this.render(1)}get rowLengthInTicks(){return parseInt(this.getAttribute("rowLength"))}set rowLengthInTicks(e){this.setAttribute("rowLength",e),this.render(1)}get status(){return this.editor.status.grid}get isConnected(){return this.editor.containerElm.contains(this)}connectedCallback(){this.attachEventHandler(["scroll","keydown","mousedown","mouseup","mousemove","mouseout","touchstart","touchend","touchmove","dragstart","drag","dragend","contextmenu"],e=>this.onInput(e)),this.editor=this.getRootNode().host,this.getAttribute("rowLength")||this.setAttribute("rowLength",this.editor.song.getSongTimeDivision()),setTimeout(e=>this.render(),20),setTimeout(e=>this.render(),1e3)}disconnectedCallback(){this.eventHandlers.forEach(e=>e[2].removeEventListener(e[0],e[1]))}attachEventHandler(e,t,n,r=null){Array.isArray(e)||(e=[e]);for(let s=0;s<e.length;s++){const i=e[s];(n=n||this).addEventListener(i,t,r),this.eventHandlers.push([i,t,n])}}clearSelection(e=[]){Array.isArray(e)||(e=[e]),this.parentNode.querySelectorAll("asct-instruction-add").forEach(t=>-1!==e.indexOf(t)?null:t.parentNode.removeChild(t)),this.querySelectorAll("asct-instruction.selected,asct-instruction.selecting,asct-instruction.cursor").forEach(t=>-1!==e.indexOf(t)?null:t.select(!1))}playSelectedInstructions(){this.editor.song.isPlaying&&this.editor.song.stopPlayback();const e=this.selectedIndicies;for(let t=0;t<e.length;t++)this.editor.song.playInstructionAtIndex(this.groupName,e[t])}getInstructions(e=null){return this.editor.song.getInstructions(this.groupName,e)}getInstruction(e){return this.editor.song.getInstruction(this.groupName,e)}getInstructionFormValues(e=null){e||(e=this.fieldInstructionCommand.value);let t=new SongInstruction;(this.fieldInstructionInstrument.value||0===this.fieldInstructionInstrument.value)&&(t.instrument=parseInt(this.fieldInstructionInstrument.value)),this.fieldInstructionDuration.value&&(t.duration=parseFloat(this.fieldInstructionDuration.value));const n=parseInt(this.fieldInstructionVelocity.value);return(n||0===n)&&(t.velocity=n),e=this.replaceFrequencyAlias(e,t.instrument),t.command=e,t}render(e=0){this.innerHTML='\n        <div class="row-segment-container"></div>\n        <div class="row-container" tabindex="0"></div>\n',this.rowContainer=this.querySelector(".row-container"),this.renderMenu(),this.renderForms(),this.renderRows(),this.update()}focusOnContainer(){this.rowContainer&&this.rowContainer!==document.activeElement&&this.rowContainer.focus()}getSegmentIDFromPositionInTicks(e){const t=this.editor.song.getGroupTimeDivision(this.groupName),n=this.segmentLength*t;return Math.floor(e/n)}renderRows(){console.time("tracker.renderRows()");const e=this.editor.song.getGroupTimeDivision(this.groupName);this.rowContainer.innerHTML="";let t=this.editor.song.getIterator(this.groupName);const n=this.rowLengthInTicks,r=this.segmentLength*e;let s=0,i=0;const o=(e,t=[])=>{const n=Math.floor(e/r);if(this.currentRowSegmentID===n){const n=new AudioSourceComposerTrackerRow;return this.rowContainer.appendChild(n),n.render(s,e,t),n}return null},c=(e,t)=>{let r=Math.ceil(e/n)*n+n;for(;r<t;)o(r),r+=n},a=this.fieldRenderInstrument.value?parseInt(this.fieldRenderInstrument.value):null;let u=null;for(;u=t.nextInstructionRow(a);){Math.floor(t.groupPositionInTicks/r);o(t.lastRowGroupStartPositionInTicks,u);c(i,t.groupPositionInTicks),i=t.groupPositionInTicks,s=t.groupIndex}c(i,(this.currentRowSegmentID+1)*r);let l=this.querySelector(".row-segment-container");l.innerHTML="";let d=Math.floor(i/r);d<this.currentRowSegmentID&&(d=this.currentRowSegmentID);for(let e=0;e<=d+1;e++){let t=new AudioSourceComposerTrackerRowSegment(e,e*r);l.appendChild(t),e===this.currentRowSegmentID&&(t.selected=e===this.currentRowSegmentID)}console.timeEnd("tracker.renderRows()")}renderMenu(){const e=this.editor,t=e=>t=>{this.focusOnContainer(),this.onAction(t,e)},n=this.editor.menuEdit,r=this.editor.menuContext;n.populate=r.populate=(n=>{const r=n.menuElement,s=this.selectedIndicies,i=(n,r)=>{n.populate=(n=>{const s=n.menuElement;e.values.getValues("song-groups",(e,t)=>{s.getOrCreateSubMenu(e,`${t}`).action=r});const i=s.getOrCreateSubMenu("new","Create New Group");i.action=t("song:new-group"),i.hasBreak=!0})},o=r.getOrCreateSubMenu("insert","Insert Command ►");o.populate=(n=>{const r=n.menuElement;r.getOrCreateSubMenu("frequency","Frequency ►").populate=(n=>{const r=n.menuElement;e.values.getValues("note-frequency-octaves",(n,s)=>{r.getOrCreateSubMenu(n,`Octave ${s} ►`).populate=(r=>{const s=r.menuElement;e.values.getValues("note-frequencies",(r,i)=>{const o=r+n;s.getOrCreateSubMenu(o,`${i}${n}`).action=(n=>{e.tracker.fieldInstructionCommand.value=o,t("instruction:command")(n)})})})})}),r.getOrCreateSubMenu("named","Named ►").disabled=!0;const s=r.getOrCreateSubMenu("group","Group ►");i(s,n=>{e.tracker.fieldInstructionCommand.value="@"+groupName,t("instruction:command")(n)});const o=r.getOrCreateSubMenu("custom","Custom Command");o.action=t("instruction:custom-command"),o.hasBreak=!0}),o.disabled=s.length>0;const c=r.getOrCreateSubMenu("set-command","Set Command ►");c.populate=(n=>{const r=n.menuElement;r.getOrCreateSubMenu("frequency","Frequency ►").populate=(n=>{const r=n.menuElement;e.values.getValues("note-frequency-octaves",(n,s)=>{r.getOrCreateSubMenu(n,`Octave ${s} ►`).populate=(r=>{const s=r.menuElement;e.values.getValues("note-frequencies",(r,i)=>{const o=r+n;s.getOrCreateSubMenu(o,`${i}${n}`).action=(n=>{e.tracker.fieldInstructionCommand.value=o,t("instruction:command")(n)})})})})}),r.getOrCreateSubMenu("named","Named ►").disabled=!0;const s=r.getOrCreateSubMenu("group","Group ►");i(s,n=>{e.tracker.fieldInstructionCommand.value="@"+groupName,t("instruction:command")(n)});const o=r.getOrCreateSubMenu("custom","Custom Command");o.action=t("instruction:custom-command"),o.hasBreak=!0}),c.disabled=0===s.length;const a=r.getOrCreateSubMenu("set-instrument","Set Instrument ►");a.populate=(n=>{const r=n.menuElement;e.values.getValues("song-instruments",(n,s)=>{r.getOrCreateSubMenu(n,`${s}`).action=(r=>{e.tracker.fieldInstructionInstrument.value=n,t("instruction:instrument")(r)})})}),a.disabled=0===s.length;const u=r.getOrCreateSubMenu("set-duration","Set Duration ►");u.populate=(n=>{const r=n.menuElement;e.values.getValues("durations",(n,s)=>{r.getOrCreateSubMenu(n,`${s}`).action=(r=>{e.tracker.fieldInstructionDuration.value=n,t("instruction:duration")(r)})});const s=r.getOrCreateSubMenu("custom","Custom Duration");s.action=t("instruction:custom-duration"),s.hasBreak=!0}),u.disabled=0===s.length;const l=r.getOrCreateSubMenu("set-velocity","Set Velocity ►");l.populate=(n=>{const r=n.menuElement;e.values.getValues("velocities",(n,s)=>{r.getOrCreateSubMenu(n,`${s}`).action=(r=>{e.tracker.fieldInstructionVelocity.value=n,t("instruction:velocity")(r)})});const s=r.getOrCreateSubMenu("custom","Custom Velocity");s.action=t("instruction:custom-velocity"),s.hasBreak=!0}),l.disabled=0===s.length;const d=r.getOrCreateSubMenu("delete","Delete Instruction(s)");d.action=t("instruction:delete"),d.disabled=0===s.length;const h=r.getOrCreateSubMenu("select","Select ►");h.hasBreak=!0,h.disabled=!0;const m=r.getOrCreateSubMenu("group","Group ►");m.hasBreak=!0,m.disabled=!0})}update(){let e=this.selectedIndicies;let t=this.editor.song.getInstructions(this.groupName,e)[0];e.length>0?this.fieldInstructionDelete.removeAttribute("disabled"):this.fieldInstructionDelete.setAttribute("disabled","disabled"),this.buttonCommandDelete.disabled=!0,this.buttonCommandInsert.disabled=!0,t?(this.fieldInstructionCommand.value=t.command,this.fieldInstructionInstrument.value=null!==t.instrument?t.instrument:"",this.fieldInstructionVelocity.value=null!==t.velocity?t.velocity:"",this.fieldInstructionDuration.value=null!==t.duration?t.duration:"",this.buttonCommandDelete.disabled=!1):0===e.length&&(this.buttonCommandInsert.disabled=!1),this.querySelectorAll(".multiple-count-text").forEach(t=>t.innerHTML=e.length>1?"(s)":""),this.fieldRenderOctave.value=this.editor.status.currentOctave,this.fieldRenderRowLength.value=this.rowLengthInTicks,!this.fieldInstructionDuration.value&&this.fieldRenderRowLength.value&&(this.fieldInstructionDuration.value=this.fieldRenderRowLength.value),this.fieldSelectedIndicies.value=e.join(",")}onInput(e){if(e.defaultPrevented)return;switch(e.type){case"mouseup":this.isSelectionRectActive()&&this.commitSelectionRect()}if(e.target instanceof Node&&!this.contains(e.target))return;let t=this.selectedIndicies;switch(e.type){case"midimessage":switch(e.data[0]){case 144:e.preventDefault();let t=(new MIDISupport).getCommandFromMIDINote(e.data[1]),n=Math.round(e.data[2]/128*100);console.log("MIDI ",t,n),this.insertOrUpdateCommand(e,t),this.playSelectedInstructions(e),this.focusOnContainer()}break;case"keydown":this.editor.closeAllMenus();let n=e.key;switch(!e.ctrlKey&&this.editor.keyboard.getKeyboardCommand(e.key)&&(n="PlayFrequency"),"Enter"===n&&e.altKey&&(n="ContextMenu"),n){case"Delete":e.preventDefault();const r=t.sort((e,t)=>t-e);for(let e=0;e<r.length;e++)this.editor.song.deleteInstructionAtIndex(this.groupName,t[e]);this.renderRows(),this.selectIndicies(e,t[0]);break;case"Escape":case"Backspace":e.preventDefault(),this.navigatePop(),this.selectIndicies(e,0);break;case"Enter":if(this.rowContainer.contains(e.target)){e.preventDefault(),this.insertOrUpdateCommand(e);let t=this.cursorInstruction;if(t.isGroupCommand()){const e=t.command.substr(1);this.editor.selectGroup(e)}else this.playSelectedInstructions(e)}break;case"Play":e.preventDefault(),this.playSelectedInstructions(e);break;case"ArrowRight":e.preventDefault(),this.selectNextCell(e).scrollTo(),this.playSelectedInstructions(e),this.focusOnContainer();break;case"ArrowLeft":e.preventDefault(),this.selectPreviousCell(e).scrollTo(),this.playSelectedInstructions(e),this.focusOnContainer();break;case"ArrowDown":e.preventDefault(),this.selectNextRowCell(e).scrollTo(),this.playSelectedInstructions(e),this.focusOnContainer();break;case"ArrowUp":e.preventDefault(),this.selectPreviousRowCell(e).scrollTo(),this.playSelectedInstructions(e),this.focusOnContainer();break;case" ":this.rowContainer.contains(e.target)&&(e.preventDefault(),this.editor.song.isPlaybackActive()?this.editor.song.stopPlayback():this.editor.song.play());break;case"PlayFrequency":let s=this.editor.keyboard.getKeyboardCommand(e.key);if(null===s)break;e.preventDefault(),this.insertOrUpdateCommand(e,s),this.playSelectedInstructions(e),this.focusOnContainer()}break;case"touchstart":case"mousedown":if(this.editor.closeAllMenus(),this.mousePosition.isDown=!0,this.mousePosition.isDragging=!1,this.mousePosition.lastDown=e,delete this.mousePosition.lastDrag,e.target.matches("asct-instruction,asct-instruction-add"))return this.onCellInput(e);if(e.target.matches("asct-instruction > *"))return this.onCellInput(e,e.target.instruction);if(e.target.matches("asct-row"))return this.onRowInput(e);break;case"touchmove":case"mousemove":1===e.which&&this.mousePosition.isDown&&(this.mousePosition.isDragging=!0,this.mousePosition.lastDrag=e),this.mousePosition.isDown&&this.mousePosition.lastDrag&&this.mousePosition.lastDown.path[0].matches("asct-row");break;case"touchend":case"mouseup":this.mousePosition.isDown=!1,this.mousePosition.isDragging&&this.mousePosition.lastDown.path[0].matches("asct-row"),this.mousePosition.isDragging=!1;const r=this.mousePosition.lastUp;if(e.t=new Date,this.mousePosition.lastUp=e,r&&r.t.getTime()+this.editor.status.doubleClickTimeout>(new Date).getTime()){e.preventDefault();const t=e.path[0],n=r.path[0];if(n===t||n.contains(t)||t.contains(n)){const n=new CustomEvent("doubleclick",{detail:{firstMouseEvent:r.e,secondMouseEvent:e,clientX:e.clientX,clientY:e.clientY},cancelable:!0,bubbles:!0});t.dispatchEvent(n)}}break;case"mouseout":e.target.matches("asc-tracker")&&(console.log(e.target,e.path),this.isSelectionRectActive()&&this.commitSelectionRect());break;case"click":break;case"doubleclick":case"longpress":e.preventDefault(),this.contains(e.target)&&this.editor.menuContext.openContextMenu(e);break;case"contextmenu":this.rowContainer.contains(e.target)&&(e.altKey||(e.preventDefault(),this.editor.menuContext.openContextMenu(e,this.cursorCell)));break;case"scroll":break;case"dragstart":case"drag":case"dragend":console.info(e.type);break;default:throw new Error("Unhandled type: "+e.type)}}updateSelectionRect(e,t){t||(t=this.mousePosition.lastDrag||this.mousePosition.lastDrag);var n=e.clientX-t.clientX,r=e.clientY-t.clientY;if(Math.sqrt(n*n+r*r)<30)return console.warn("Skipping selection rect");let s,i,o,c,a=this.querySelector("div.selection-rect");return a||((a=document.createElement("div")).classList.add("selection-rect"),this.appendChild(a)),e.clientX<t.clientX?(s=e.clientX,o=t.clientX-e.clientX):(s=t.clientX,o=e.clientX-t.clientX),e.clientY<t.clientY?(i=e.clientY,c=t.clientY-e.clientY):(i=t.clientY,c=e.clientY-t.clientY),a.style.left=s+"px",a.style.width=o+"px",a.style.top=i+"px",a.style.height=c+"px",this.querySelectorAll("asct-instruction").forEach(e=>{const t=e.getBoundingClientRect(),n=t.x+t.width>s&&t.x<s+o&&t.y+t.height>i&&t.y<i+c;e.classList.toggle("selecting",n)}),{x:s,y:i,w:o,h:c}}isSelectionRectActive(){return!!this.querySelector("div.selection-rect")}commitSelectionRect(e=null,t=null){e||(e=this.mousePosition.lastDown);let n=this.querySelector("div.selection-rect");if(!n)return console.warn("No selection rect");const r=n.getBoundingClientRect();n.parentNode.removeChild(n),this.clearSelection();const s=this.querySelectorAll("asct-instruction,asct-row"),i=[];s.forEach(e=>{const t=e.getBoundingClientRect();t.x+t.width>r.x&&t.x<r.x+r.width&&t.y+t.height>r.y&&t.y<r.y+r.height&&(i.push(e),e.select(!0,!1))}),console.log("Selection ",i,r)}get formsTracker(){return this.editor.formsTracker}get fieldRenderRowLength(){return this.formsTracker.querySelector("form.form-render-row-length select[name=rowLengthInTicks]")}get fieldRenderInstrument(){return this.formsTracker.querySelector("form.form-render-instrument select[name=instrument]")}get fieldRenderOctave(){return this.formsTracker.querySelector("form.form-render-octave select[name=octave]")}get fieldSelectedIndicies(){return this.formsTracker.querySelector("form.form-selected-indicies select[name=indicies]")}get fieldInstructionInstrument(){return this.formsTracker.querySelector("form.form-instruction-instrument select[name=instrument]")}get fieldInstructionDuration(){return this.formsTracker.querySelector("form.form-instruction-duration select[name=duration]")}get fieldInstructionCommand(){return this.formsTracker.querySelector("form.form-instruction-command select[name=command]")}get fieldInstructionVelocity(){return this.formsTracker.querySelector("form.form-instruction-velocity input[name=velocity]")}get fieldInstructionInsert(){return this.formsTracker.querySelector("form.form-instruction-insert button[name=insert]")}get fieldInstructionDelete(){return this.formsTracker.querySelector("form.form-instruction-delete button[name=delete]")}get fieldSelectedIndicies(){return this.formsTracker.querySelector("form.form-selected-indicies input[name=indicies]")}get buttonCommandInsert(){return this.formsTracker.querySelector("form.form-instruction-insert button[name=insert]")}get buttonCommandDelete(){return this.formsTracker.querySelector("form.form-instruction-delete button[name=delete]")}renderForms(){const e=this.editor.formsTracker,t=this.fieldInstructionInstrument?parseInt(this.fieldInstructionInstrument.value):0;e.innerHTML=`\n            <div class="form-section control-tracker">\n                <div class="form-section-header">Instruction</div>\n                <form action="#" class="form-instruction-command submit-on-change" data-action="instruction:command">\n                    <select name="command" title="Instruction Command" class="themed" required="required">\n                        <option value="">Select...</option>\n                        <optgroup label="Custom Frequencies" class="instrument-frequencies">\n                            ${this.editor.values.renderEditorFormOptions("command-instrument-frequencies")}\n                        </optgroup>\n                        <optgroup label="Frequencies">\n                            ${this.editor.values.renderEditorFormOptions("note-frequencies-all")}\n                        </optgroup>\n                        <optgroup label="Group Execute">\n                            ${this.editor.values.renderEditorFormOptions("command-group-execute")}\n                        </optgroup>\n                    </select>\n                </form>\n                <form action="#" class="form-instruction-insert" data-action="instruction:command">\n                    <button name="insert" class="themed" title="Insert Instruction">\n                        <i class="ui-icon ui-insert"></i>\n                    </button>\n                </form>\n                <form action="#" class="form-instruction-delete submit-on-change" data-action="instruction:delete">\n                    <button name="delete" class="themed" title="Delete Instruction">\n                        <i class="ui-icon ui-subtract"></i>\n                    </button>\n                </form>\n            </div>\n            \n            <form action="#" class="form-instruction-instrument submit-on-change" data-action="instruction:instrument">\n            <div class="form-section-header">Instrument</div>\n                <select name="instrument" title="Instruction Instrument" class="themed">\n                    <option value="">No Instrument Selected</option>\n                    <optgroup label="Song Instruments">\n                        ${this.editor.values.renderEditorFormOptions("song-instruments",e=>e===t)}\n                    </optgroup>\n                </select>\n            </form>\n            \n            <form action="#" class="form-instruction-velocity submit-on-change" data-action="instruction:velocity">\n            <div class="form-section-header">Velocity</div>\n                <input type="range" name="velocity" min="1" max="100" class="themed" />\n            </form>\n            \n            \n            <form action="#" class="form-instruction-duration submit-on-change" data-action="instruction:duration">\n                <div class="form-section-header">Duration</div>\n                <select name="duration" title="Instruction Duration" class="themed">\n                    <option value="">No Duration</option>\n                    <optgroup label="Note Duration">\n                        ${this.editor.values.renderEditorFormOptions("durations")}\n                    </optgroup>\n                </select>\n            </form>\n             \n            \n                \n            <form action="#" class="form-render-octave submit-on-change" data-action="status:octave">\n                <div class="form-section-header">Octave</div>\n                <select name="octave" class="themed">\n                    <optgroup label="Select Octave">\n                        ${this.editor.values.renderEditorFormOptions("note-frequency-octaves")}\n                    </optgroup>\n                </select>\n            </form>\n            \n            <div class="form-section control-tracker">\n                <div class="form-section-header">Render Group</div>\n                ${this.editor.values.getValues("groups",(e,t)=>`<form action="#" class="form-group" data-action="group:change" data-group="${e}">`+`<button name="groupName" class="themed" ><span>${t}</span></button>`+"</form>")}\n                \n                <form action="#" class="form-group" data-action="song:new-group">\n                    <button name="groupName" class="new themed" title="Create new group">\n                        <i class="ui-icon ui-insert"></i>\n                    </button>\n                </form>\n                \n            </div>\n            \n            <form action="#" class="form-render-row-length submit-on-change" data-action="tracker:row-length">\n                <div class="form-section-header">Row Length</div>\n                <select name="rowLengthInTicks" title="Row Length" class="themed">\n                    <option value="">Default</option>\n                    <optgroup label="Render Duration">\n                        ${this.editor.values.renderEditorFormOptions("durations")}\n                    </optgroup>\n                </select>\n            </form>\n            \n            <form action="#" class="form-render-instrument submit-on-change" data-action="tracker:filter-instrument">\n                <div class="form-section-header">Filter By Instrument</div>                    \n                <select name="instrument" class="themed"->\n                    <option value="">Show All (Default)</option>\n                    <optgroup label="Filter By">\n                        ${this.editor.values.renderEditorFormOptions("song-instruments")}\n                    </optgroup>\n                </select>\n            </form>\n            \n            <form class="form-selected-indicies submit-on-change" data-action="tracker:select">\n                <div class="form-section-header">Selection</div>                    \n                <input type="text" name="indicies" class="themed" placeholder="No selection" />\n            </form>\n        `}onAction(e,t,n=null){let r=this.selectedIndicies;const s=e.target.form||e.target;switch(t){case"instruction:custom-command":case"instruction:command":let i=this.fieldInstructionCommand.value||null;if(null!==i&&"instruction:custom-command"!==t||(i=prompt("Set custom command:",i||"")),!i)throw new Error("Set command canceled");let o=this.getInstructionFormValues(i),c=null;if(this.fieldInstructionCommand.selectedOptions[0]&&this.fieldInstructionCommand.selectedOptions[0].hasAttribute("data-instrument")&&(c=parseInt(this.fieldInstructionCommand.selectedOptions[0].getAttribute("data-instrument"))),r.length>0){for(let e=0;e<r.length;e++)this.editor.song.replaceInstructionCommand(this.groupName,r[e],i),null!==c&&this.editor.song.replaceInstructionInstrument(this.groupName,r[e],c),this.findInstructionElement(r[e]).render();this.renderRows(),this.selectIndicies(e,r)}else{if(!this.cursorCell)throw new Error("No selection or cursor cell");{const t=this.cursorPosition;if(null===t)throw new Error("No cursor position");const n=this.editor.song.insertInstructionAtPosition(this.groupName,t,o);this.renderRows(),this.selectIndicies(e,n)}}this.playSelectedInstructions();break;case"instruction:instrument":let a=""===this.fieldInstructionInstrument.value?null:parseInt(this.fieldInstructionInstrument.value);for(let e=0;e<r.length;e++)this.editor.song.replaceInstructionInstrument(this.groupName,r[e],a),this.findInstructionElement(r[e]).render();this.editor.status.currentInstrumentID=a,this.playSelectedInstructions(),this.renderRows(),this.selectIndicies(e,r);break;case"instruction:duration":case"instruction:custom-duration":let u=parseFloat(this.fieldInstructionDuration.value);if(null!==u&&"instruction:custom-duration"!==t||(u=parseInt(prompt("Set custom duration in ticks:",this.fieldInstructionDuration.value))),isNaN(u))throw new Error("Set duration canceled");for(let e=0;e<r.length;e++)this.editor.song.replaceInstructionDuration(this.groupName,r[e],u),this.findInstructionElement(r[e]).render();this.playSelectedInstructions(),this.renderRows(),this.selectIndicies(e,r);break;case"instruction:velocity":case"instruction:custom-velocity":let l="0"===this.fieldInstructionVelocity.value?0:parseInt(this.fieldInstructionVelocity.value)||null;if(null!==l&&"instruction:custom-velocity"!==t||(l=parseInt(prompt("Set custom velocity (0-127):",this.fieldInstructionVelocity.value))),isNaN(l))throw new Error("Set velocity canceled");for(let e=0;e<r.length;e++)this.editor.song.replaceInstructionVelocity(this.groupName,r[e],l),this.findInstructionElement(r[e]).render();this.playSelectedInstructions(),this.renderRows(),this.selectIndicies(e,r);break;case"instruction:delete":for(let e=0;e<r.length;e++)this.editor.song.deleteInstructionAtIndex(this.groupName,r[e]);this.renderRows(),this.selectIndicies(e,r[0]);break;case"group:change":const d=n||s.getAttribute("data-group");this.groupName=d;break;case"song:new-group":let h=this.editor.song.generateInstructionGroupName(this.groupName);(h=prompt("Create new instruction group?",h))?this.editor.song.addInstructionGroup(h,[]):this.editor.setStatus("<span style='color: red'>Create instruction group canceled</span>"),this.editor.render();break;case"tracker:row-segment":this.currentRowSegmentID=parseInt(s.elements.id.value),this.renderRows(),this.selectNextCell(),this.querySelector(`asctr-segment[id="${this.currentRowSegmentID}"]`).focus();break;case"tracker:octave":this.editor.status.currentOctave=parseInt(this.fieldRenderOctave.value);break;case"tracker:row-length":this.rowLengthInTicks=this.fieldRenderRowLength.value,this.renderRows(),this.selectIndicies(e,r);break;case"tracker:filter-instrument":this.renderRows(),this.selectIndicies(e,r);break;case"tracker:select":r=this.fieldSelectedIndicies.value.split(/\D+/).map(e=>parseInt(e)),this.selectIndicies(e,r),this.fieldSelectedIndicies.focus();break;default:return!1}return!0}onRowInput(e){e.preventDefault();let t=e.target;e.shiftKey||this.clearSelection([t]),t.createAddInstructionElement(),t.setCursor(),this.update(),this.playSelectedInstructions(e),this.focusOnContainer(),t.parentNode.scrollTo(),this.editor.song.setPlaybackPositionInTicks(t.position)}onCellInput(e,t){e.preventDefault(),t=t||e.target,e.ctrlKey||this.clearSelection([t,t.row]),this.editor.closeAllMenus(),console.time("onCelInput"),t.select(!t.selected),console.timeEnd("onCelInput"),t.setCursor(),t.play(),t.parentNode.scrollTo(),this.focusOnContainer(),this.editor.song.setPlaybackPositionInTicks(t.parentNode.position)}onSongEvent(e){const t=e.detail||{stats:{}};let n,r;switch(e.type){case"note:start":if(t.groupPositionInTicks){if(!(n=this.findRowElement(t.groupPositionInTicks))){const e=this.getSegmentIDFromPositionInTicks(t.groupPositionInTicks);e!==this.currentRowSegmentID&&(this.currentRowSegmentID=e,this.renderRows()),n=this.findRowElement(t.groupPositionInTicks)}n&&n.classList.add("playing")}t.groupIndex&&(r=this.findInstructionElement(t.groupIndex))&&r.classList.add("playing");break;case"note:end":t.groupPositionInTicks&&(n=this.findRowElement(t.groupPositionInTicks))&&n.classList.remove("playing"),t.groupIndex&&(r=this.findInstructionElement(t.groupIndex))&&r.classList.remove("playing")}}get selectedCells(){return this.querySelectorAll("asct-instruction.selected")}get cursorCell(){return this.querySelector("asct-instruction.cursor,asct-instruction-add.cursor")}get cursorRow(){return this.cursorCell.parentNode}get cursorPosition(){return(e=>e?e.parentNode.position:null)(this.cursorCell)}get cursorInstruction(){return this.getInstruction(this.cursorCell.index)}get selectedIndicies(){return[].map.call(this.selectedCells,e=>e.index)}getCursorElement(){return this.querySelector(".cursor")}selectNextCell(e,t=!0){const n=this.getCursorElement();let r;if(n){if(n instanceof AudioSourceComposerTrackerInstructionAdd)return this.selectNextRowCell(e,t,0);r=n.nextInstructionSibling?n.nextInstructionSibling:n.row.createAddInstructionElement()}else r=this.querySelector("asct-instruction");return r||(r=this.rowContainer.querySelector("asct-row").createAddInstructionElement()),r.select(!0).setCursor(),t&&this.clearSelection(r),r}selectPreviousCell(e,t=!0){const n=this.getCursorElement();let r;if(n){if(!n.previousInstructionSibling)return this.selectPreviousRowCell(e,t,-1);r=n.previousInstructionSibling}return r||(r=this.rowContainer.querySelector("asct-row:last-child").createAddInstructionElement()),r.select(!0).setCursor(),t&&this.clearSelection(r),r}selectNextRowCell(e,t=!0,n=null){const r=this.getCursorElement(),s=r.parentNode;if(null===n&&(n=[].indexOf.call(r.parentNode.children,r)),!s.nextElementSibling)return this.currentRowSegmentID++,this.renderRows(),this.focusOnContainer(),this.selectNextCell(e,!0);const i=s.nextElementSibling;let o=i.querySelector("asct-instruction");return i.children[n]&&i.children[n].matches("asct-instruction,asct-instruction-add")&&(o=i.children[n]),o||(o=i.createAddInstructionElement()),o.select(!0).setCursor(),t&&this.clearSelection(o),o}selectPreviousRowCell(e,t=!0,n=null){const r=this.getCursorElement(),s=r.parentNode;if(null===n&&(n=[].indexOf.call(r.parentNode.children,r)),!s.previousElementSibling){if(0===this.currentRowSegmentID)throw new Error("TODO: reached beginning of song");return this.currentRowSegmentID--,this.renderRows(),this.focusOnContainer(),this.selectPreviousCell(e,!0)}let i,o=s.previousElementSibling;return o.children[n]&&o.children[n].matches("asct-instruction,asct-instruction-add")&&(i=o.children[n]),i||(i=o.createAddInstructionElement()),i.select(!0).setCursor(),t&&this.clearSelection(i),i}selectIndicies(e,t,n=!0){Array.isArray(t)||(t=[t]),n&&this.clearSelection();for(let e=0;e<t.length;e++){const n=this.findInstructionElement(t[e]);if(!n)throw new Error("Instruction not found: "+t[e]);n.select(!0,!1),0===e&&n.setCursor()}}navigatePop(){this.editor.setStatus("Navigate Back: ",this.status.trackers[0].groupName),this.status.trackers.length>0&&this.status.trackers.shift(),this.render()}increaseTrackerSize(e,t=!0){if(this.renderMinimumRows+=1,this.render(),t){this.querySelector("asc-tracker > asct-row:last-child").setCursor()}}insertInstructionAtIndex(e,t){return this.editor.song.insertInstructionAtIndex(this.groupName,t,e)}insertInstructionAtPosition(e,t){return this.editor.song.insertInstructionAtPosition(this.groupName,e,t)}deleteInstructionAtIndex(e){return this.editor.song.deleteInstructionAtIndex(this.groupName,e,1)}replaceInstructionCommand(e,t){return this.editor.song.replaceInstructionCommand(this.groupName,e,t)}replaceInstructionVelocity(e,t){return this.editor.song.replaceInstructionVelocity(this.groupName,e,t)}insertOrUpdateCommand(e,t=null){let n=this.selectedIndicies;if(this.cursorCell.matches("asct-instruction-add")){let n=this.getInstructionFormValues(t);if(!n)return this.fieldInstructionCommand.focus(),console.info("Insert canceled");const r=this.cursorPosition,s=this.insertInstructionAtPosition(r,n);this.renderRows(),this.selectIndicies(e,s)}else{for(let e=0;e<n.length;e++){const r=this.getInstruction(n[e]),s=this.replaceFrequencyAlias(t,r.instrument);this.replaceInstructionCommand(n[e],s)}this.renderRows(),this.selectIndicies(e,n)}}replaceFrequencyAlias(e,t){const n=this.editor.song.getInstrument(t,!1);if(!n||!n.getFrequencyAliases)return e;const r=n.getFrequencyAliases(e);return void 0===r[e]?e:r[e]}findRowElement(e){return this.querySelector(`asct-row[p='${e}']`)}findInstructionElement(e){return this.querySelector(`asct-instruction[i='${e}']`)}getInstructionHTML(e,t){return`<div class="instruction" data-index="${e}">\n                    <div class="command">${t.command}</div>\n                    ${null!==t.instrument?`<div class="instrument">${this.editor.values.format(t.instrument,"instrument")}</div>`:""}\n                    ${null!==t.velocity?`<div class="velocity">${this.editor.values.format(t.velocity,"velocity")}</div>`:""}\n                    ${null!==t.duration?`<div class="duration">${this.editor.values.format(t.duration,"duration")}</div>`:""}\n                </div>`}}customElements.define("asc-tracker",AudioSourceComposerTracker);const VISIBLE_BUFFER=100;class AudioSourceComposerTrackerRow extends HTMLElement{constructor(){super()}get tracker(){return this.closest("asc-tracker")}get selected(){return this.classList.contains("selected")}set position(e){this.setAttribute("p",e)}get position(){return parseInt(this.getAttribute("p"))}get duration(){return this.nextElementSibling?this.nextElementSibling.position-this.position:"N/A"}set index(e){this.setAttribute("i",e)}get index(){return parseInt(this.getAttribute("i"))}get visible(){const e=this.parentNode.scrollTop+this.parentNode.offsetHeight,t=this.offsetTop+this.offsetHeight;return!(this.offsetTop-e>VISIBLE_BUFFER)&&!(t<this.parentNode.scrollTop-VISIBLE_BUFFER)}connectedCallback(){}getDeltaElement(){let e=this.querySelector("asct-delta");return e||(e=document.createElement("asct-delta"),this.appendChild(e),e)}createAddInstructionElement(){let e=this.querySelector("asct-instruction-add");if(!e){this.parentNode.querySelectorAll("asct-instruction-add").forEach(e=>e.parentNode.removeChild(e));const t=document.createElement("asct-instruction-add");e=t,t.index=this.index,t.innerHTML="+"}const t=this.getDeltaElement();return this.insertBefore(e,t),e}clearAddInstructionElement(){this.parentNode.querySelectorAll("asct-instruction-add").forEach(e=>e.parentNode.removeChild(e))}setCursor(){this.querySelector("asct-instruction-add").classList.add("cursor")}select(e=!0){if(e){if(this.selected)return void console.warn("Already selected ",this);this.classList.add("selected")}else{if(!this.selected)return void console.warn("Already unselected ",this);this.classList.remove("selected")}}updateDelta(){let e=this.getDeltaElement();this.appendChild(e),e.render(this.duration)}scrollTo(){const e=this.parentNode;e.scrollTop<this.offsetTop-e.offsetHeight&&(e.scrollTop=this.offsetTop),e.scrollTop>this.offsetTop&&(e.scrollTop=this.offsetTop-e.offsetHeight)}render(e,t,n=[]){this.position=t;const r=this.querySelectorAll("asct-instruction");let s=0;for(;s<r.length;s++){const t=r[s];s>=n.length?t.parentNode.removeChild(t):(t.index=e+s,t.render(n[s]))}for(;s<n.length;s++){const t=document.createElement("asct-instruction");t.index=e+s,this.appendChild(t),t.render(n[s])}return this.nextElementSibling?this.updateDelta():this.previousElementSibling&&this.previousElementSibling.updateDelta(),this.selected&&this.createAddInstructionElement(),this}}customElements.define("asct-row",AudioSourceComposerTrackerRow);class AudioSourceComposerTrackerRowSegment extends HTMLElement{constructor(e,t){super(),this.id=e,this.positionInTicks=t}get tracker(){return this.closest("asc-tracker")}get id(){return parseInt(this.getAttribute("id"))}set id(e){this.setAttribute("id",e)}get positionInTicks(){return parseInt(this.getAttribute("position"))}set positionInTicks(e){this.setAttribute("position",e)}get selected(){return this.classList.contains("selected")}set selected(e){this.classList.toggle("selected",e)}focus(){this.querySelector("button").focus()}connectedCallback(){this.render()}render(){return this.innerHTML=`<form action="#" class="form-row-segment" data-action="tracker:row-segment">\n                <input type="hidden" name="id" value="${this.id}" />\n                <button name="select" title="Render row segment #${this.id}">\n                    <span>${this.id}</span>\n                </button>\n            </form>`,this}}customElements.define("asctr-segment",AudioSourceComposerTrackerRowSegment);class AudioSourceComposerTrackerInstruction extends HTMLElement{constructor(){super()}get row(){return this.parentNode}get tracker(){if(!this.parentNode)throw new Error("Invalid tracker");return this.parentNode.tracker}get editor(){return this.tracker.editor}set index(e){this.setAttribute("i",e)}get index(){return parseInt(this.getAttribute("i"))}get selected(){return this.classList.contains("selected")}get nextInstructionSibling(){return this.nextElementSibling&&this.nextElementSibling.matches("asct-instruction")?this.nextElementSibling:null}get previousInstructionSibling(){return this.previousElementSibling&&this.previousElementSibling.matches("asct-instruction")?this.previousElementSibling:null}getInstruction(){return this.row.tracker.getInstruction(this.index)}play(){return this.editor.song.playInstructionAtIndex(this.tracker.groupName,this.index,this.editor.song.getAudioContext().currentTime,{groupPositionInTicks:this.row.position,currentIndex:this.index}),this}connectedCallback(){}scrollTo(){return this.row.scrollTo()}setCursor(){return this.tracker.querySelectorAll(".cursor").forEach(e=>e.classList.remove("cursor")),this.classList.add("cursor"),this}select(e=!0){return e?this.classList.add("selected"):this.classList.remove("selected","cursor"),this.render(),this}render(e=null){e=e||this.getInstruction();let t=this.querySelector("ascti-command")||document.createElement("ascti-command");if(this.appendChild(t),t.render(e),this.classList.contains("selected")){let t=this.querySelector("ascti-instrument")||document.createElement("ascti-instrument");this.appendChild(t),t.render(e);let n=this.querySelector("ascti-velocity")||document.createElement("ascti-velocity");this.appendChild(n),n.render(e);let r=this.querySelector("ascti-duration")||document.createElement("ascti-duration");this.appendChild(r),r.render(e)}else{let e=this.querySelector("ascti-instrument");e&&e.parentNode.removeChild(e);let t=this.querySelector("ascti-velocity");t&&t.parentNode.removeChild(t);let n=this.querySelector("ascti-duration");n&&n.parentNode.removeChild(n)}return this}}customElements.define("asct-instruction",AudioSourceComposerTrackerInstruction);class AudioSourceComposerTrackerInstructionAdd extends AudioSourceComposerTrackerInstruction{render(e=null){if(e)throw new Error("Invalid");return this.innerHTML="+",this}}customElements.define("asct-instruction-add",AudioSourceComposerTrackerInstructionAdd);class AudioSourceComposerTrackerParameter extends HTMLElement{constructor(){super()}get instruction(){return this.parentNode}get tracker(){return this.parentNode.parentNode.tracker}get editor(){return this.tracker.editor}connectedCallback(){}render(){this.innerHTML=this.editor.values.format(this.row.duration,"duration")}}class AudioSourceComposerParamCommand extends AudioSourceComposerTrackerParameter{render(e=null){e=e||this.instruction.getInstruction(),this.innerHTML=this.editor.values.format(e.command,"command")}}customElements.define("ascti-command",AudioSourceComposerParamCommand);class AudioSourceComposerParamInstrument extends AudioSourceComposerTrackerParameter{render(e=null){e=e||this.instruction.getInstruction(),this.innerHTML=this.editor.values.format(e.instrument,"instrument")}}customElements.define("ascti-instrument",AudioSourceComposerParamInstrument);class AudioSourceComposerParamVelocity extends AudioSourceComposerTrackerParameter{render(e=null){e=e||this.instruction.getInstruction(),this.innerHTML=this.editor.values.format(e.velocity,"velocity")}}customElements.define("ascti-velocity",AudioSourceComposerParamVelocity);class AudioSourceComposerTrackerDuration extends AudioSourceComposerTrackerParameter{render(e=null){e=e||this.instruction.getInstruction(),this.innerHTML=this.editor.values.format(e.duration,"duration")}}customElements.define("ascti-duration",AudioSourceComposerTrackerDuration);class AudioSourceComposerTrackerDelta extends HTMLElement{constructor(){super()}get editor(){return this.tracker.editor}get tracker(){return this.parentNode.tracker}get row(){return this.parentNode}connectedCallback(){}render(e){e=e||this.row?this.row.duration:-1,this.innerHTML=this.editor.values.format(e,"duration")}}customElements.define("asct-delta",AudioSourceComposerTrackerDelta);class AudioSourceComposerKeyboard{constructor(e){this.editor=e}get keyboardLayout(){return{2:"C#2",3:"D#2",5:"F#2",6:"G#2",7:"A#2",9:"C#3",0:"D#3",q:"C2",w:"D2",e:"E2",r:"F2",t:"G2",y:"A2",u:"B2",i:"C3",o:"D3",p:"E3",s:"C#1",d:"D#1",g:"F#1",h:"G#1",j:"A#1",l:"C#2",";":"D#2",z:"C1",x:"D1",c:"E1",v:"F1",b:"G1",n:"A1",m:"B1",",":"C2",".":"D2","/":"E2"}}getKeyboardCommand(e){const r=this.keyboardLayout;if(void 0===r[e])return null;const t=parseInt(this.editor.tracker.fieldRenderOctave.value)||1;let o=r[e];return o=(o=o.replace("2",t+1)).replace("1",t)}}class AudioSourceComposerMenu extends HTMLElement{constructor(){super(),this.action=null,this.populate=null,this.mouseTimeout=null,this.caption=null}get key(){return this.getAttribute("key")}set key(e){this.setAttribute("key",e),this.render()}get disabled(){return"true"==this.getAttribute("disabled")}set disabled(e){e?this.setAttribute("disabled","true"):this.removeAttribute("disabled")}get hasBreak(){return this.getAttribute("hasBreak")}set hasBreak(e){this.setAttribute("hasBreak",e),this.render()}get editor(){const e=this.closest("div.asc-container").parentNode.host;if(!e)throw new Error("Editor not found");return e}connectedCallback(){const e=this.getAttribute("caption");e&&(this.caption=e),this.addEventListener("mouseenter",this.onInputEvent),this.addEventListener("mouseleave",this.onInputEvent),this.addEventListener("click",this.onInputEvent),this.addEventListener("change",this.onInputEvent),this.addEventListener("keydown",this.onInputEvent),this.render()}disconnectedCallback(){this.removeEventListener("mouseenter",this.onInputEvent),this.removeEventListener("mouseleave",this.onInputEvent),this.removeEventListener("click",this.onInputEvent),this.removeEventListener("change",this.onInputEvent),this.removeEventListener("keydown",this.onInputEvent)}onInputEvent(e){if(!this.contains(e.target))return;if(this===e.target.closest("asc-menu"))switch(e.type){case"mouseenter":clearTimeout(this.mouseTimeout),this.hasSubMenu&&this.renderSubMenu(e);break;case"mouseleave":this.classList.contains("stick")||(clearTimeout(this.mouseTimeout),this.mouseTimeout=setTimeout(e=>{this.clearSubMenu()},200));break;case"click":if(e.defaultPrevented)return;if(this.hasAction)e.preventDefault(),this.doAction(e);else{if(!this.hasSubMenu)return console.warn("Menu has no submenu or action: ",this);e.preventDefault(),this.toggleSubMenu(e)}break;case"keydown":if(e.defaultPrevented)return;e.preventDefault();const t=this.getSubMenuContainer(),n=t.querySelector("asc-menu.selected")||t.firstElementChild;if(!n)throw new Error("No selected menu item found");switch(e.key){case"Escape":case"Backspace":this.closeMenu(e);break;case"Enter":if(n.hasAction)n.doAction(e);else{if(!n.hasSubMenu)return console.warn("Menu has no submenu or action: ",n);n.toggleSubMenu(e)}break;case"ArrowRight":if(!n.hasSubMenu)return console.warn("Menu has no submenu: ",n);n.toggleSubMenu(e);break;case"ArrowLeft":this.closeMenu(e);break;case"ArrowDown":this.selectNextSubMenuItem();break;case"ArrowUp":this.selectPreviousSubMenuItem()}}}get hasAction(){return!!this.action}doAction(e){if(!this.hasAction)throw new Error("No .action callback set");e.menuElement=this,this.action(e),this.closeAllMenus()}get hasSubMenu(){return!!this.populate}toggleSubMenu(e){this.classList.contains("open")?this.clearSubMenu(e):this.renderSubMenu(e)}clearSubMenu(e){this.classList.remove("open"),this.getSubMenuContainer().innerHTML=""}renderSubMenu(e){if(!this.populate)throw new Error("Menu has no .populate callback");let t=this.getSubMenuContainer();this.classList.add("open"),e.menuElement=this,this.populate(e),t.focus();const n=t.querySelectorAll("asc-menu:not([disabled])");n[0]&&n[0].classList.add("selected")}getSubMenuContainer(){let e=this.querySelector(".dropdown-container");return e||((e=document.createElement("div")).classList.add("dropdown-container"),e.setAttribute("tabindex","0"),this.appendChild(e)),e}getOrCreateSubMenu(e,t=null){e=e.toString();let n=this.getSubMenuContainer();for(let t=0;t<n.childNodes.length;t++){const s=n.childNodes[t];if(s.matches("asc-menu")&&s.key===e)return s}const s=document.createElement("asc-menu");return s.key=e,t&&(s.caption=t),n.appendChild(s),s}selectNextSubMenuItem(){const e=this.getSubMenuContainer(),t=e.querySelector("asc-menu.selected");e.querySelectorAll("asc-menu.selected").forEach(e=>e.classList.remove("selected"));const n=e.querySelectorAll("asc-menu:not([disabled])");let s=[].indexOf.call(n,t);(s>-1&&s<n.length-1?n[s+1]:n[0]).classList.add("selected")}selectPreviousSubMenuItem(){const e=this.getSubMenuContainer(),t=e.querySelector("asc-menu.selected");e.querySelectorAll("asc-menu.selected").forEach(e=>e.classList.remove("selected"));const n=e.querySelectorAll("asc-menu:not([disabled])");let s=[].indexOf.call(n,t);(s>0?n[s-1]:n[n.length-1]).classList.add("selected")}openContextMenu(e,t=null){const n=(t=t||e.target).getBoundingClientRect();let s=this.getSubMenuContainer();const i=this.editor.getBoundingClientRect();let r=n.x+n.width-i.x,o=n.y+n.height-i.y;this.clearSubMenu(),this.renderSubMenu(e),console.info("Context menu ",t,s,r,o),s.classList.add("open-context-menu"),this.classList.add("open","stick"),s.style.left=r+"px",s.style.top=o+"px"}closeAllMenus(){let e=this;for(;e.parentElement&&e.parentElement.closest("asc-menu");)e=e.parentElement.closest("asc-menu");e.parentElement.querySelectorAll("asc-menu.open,asc-menu.stick").forEach(e=>e.classList.remove("open","stick"))}closeMenu(e){this.clearSubMenu(e);let t=this.parentElement.closest("asc-menu");this.querySelectorAll("asc-menu.open,asc-menu.stick").forEach(e=>e.classList.remove("open","stick")),t&&t!==this&&t.renderSubMenu(e)}render(){const e=null===this.caption?this.key:this.caption;if(e){let t=this.querySelector("div");t||((t=document.createElement("div")).classList.add("caption"),this.firstElementChild?this.insertBefore(t,this.firstElementChild):this.appendChild(t)),t.innerHTML="","string"==typeof e?t.innerHTML=e:t.appendChild(e)}if(this.hasBreak){let e=this.querySelector("hr");e||(e=document.createElement("hr"),this.firstElementChild?this.insertBefore(e,this.firstElementChild):this.appendChild(e))}}}customElements.define("asc-menu",AudioSourceComposerMenu);class AudioSourceComposerWebsocket{constructor(e){this.editor=e}initWebSocket(e){if(e||(e=null),!("WebSocket"in window))return void console.warn("WebSocket is not supported by your Browser!");this.webSocket&&(this.webSocket.close(),this.webSocket=null);const t=window.origin.replace(/^http/i,"ws")+"/song/"+(e||""),s=new WebSocket(t),o=this.onWebSocketEvent.bind(this);s.addEventListener("open",o),s.addEventListener("message",o),s.addEventListener("close",o),this.webSocket=s}loadSongFromServer(e){this.setAttribute("uuid",e),this.initWebSocket(e)}onError(e){this.webSocket&&this.webSocket.send(JSON.stringify({type:"error",message:e.message||e,stack:e.stack}))}onWebSocketEvent(e){switch(e.type){case"open":break;case"close":this.webSocketAttempts++,this.webSocketAttempts<=this.status.webSocket.maxAttempts?(setTimeout(()=>this.initWebSocket(),this.status.webSocket.reconnectTimeout),console.info("Reopening WebSocket in "+this.status.webSocket.reconnectTimeout/1e3+" seconds ("+this.webSocketAttempts+")")):console.info("Giving up on WebSocket");break;case"message":if("{"===e.data[0]){const t=JSON.parse(e.data);switch(t.type){case"history:entry":const e=editor.song;e.applyHistoryActions(t.songHistory),this.status.history.currentStep=t.songHistory[t.songHistory.length-1].step,this.player.loadAllInstruments(),this.render(),this.grid.focus();const s=e.songData.uuid;if(s){let t=JSON.parse(localStorage.getItem("server-recent-uuid")||"[]");(t=t.filter(e=>e[0]!==s)).unshift([s,e.songData.title,(new Date).getTime()]),localStorage.setItem("server-recent-uuid",JSON.stringify(t))}break;case"history:error":case"error":console.error("WS:"+t.message,t.stack);break;default:console.log("Unrecognized web socket event: "+t.type)}}else console.log("Unrecognized web socket message: "+e.data)}}}class AudioSourceValues{constructor(e=null){this.renderer=e}get noteFrequencies(){return["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]}get valueTypes(){return["beats-per-measure","beats-per-minute","command-group-execute","command-instrument-frequencies","durations","groups","instruments-available","named-durations","note-frequencies","note-frequencies-all","note-frequency-octaves","song-groups","song-instruments","song-recent-list","velocities"]}getValues(e,t){let r,n="";const s=this.renderer?this.renderer.data:null,o=this.renderer?this.renderer.getSongTimeDivision():384;switch(e){case"song-recent-list":break;case"song-instruments":if(this.renderer&&s.instruments){const e=s.instruments;for(let r=0;r<e.length;r++){const s=e[r]||{name:"No Instrument Loaded"};n+=t(r,this.format(r,"instrument")+": "+(s.name?s.name:s.url.split("/").pop()))}}break;case"instruments-available":break;case"command-instrument-frequencies":if(s)for(let e=0;e<s.instruments.length;e++)if(this.renderer.isInstrumentLoaded(e)){const r=this.renderer.getInstrument(e);if(r.getFrequencyAliases){const s=r.getFrequencyAliases();Object.values(s).forEach(r=>n+=t(r,r,`data-instrument="${e}"`))}}break;case"note-frequencies":r=this.noteFrequencies;for(let e=0;e<r.length;e++){const s=r[e];n+=t(s,s)}break;case"note-frequencies-all":r=this.noteFrequencies;for(let e=1;e<=6;e++)for(let s=0;s<r.length;s++){const o=r[s]+e;n+=t(o,o)}break;case"note-frequency-octaves":for(let e=1;e<=7;e+=1)n+=t(e,""+e);break;case"velocities":for(let e=100;e>=0;e-=10)n+=t(e,e);break;case"durations":for(let e=64;e>1;e/=2){let r=`1/${e}`;n+=t(1/e/1.5*o,`${r}t`),n+=t(1/e*o,`${r}`),n+=t(1/e*1.5*o,`${r}d`)}for(let e=1;e<=16;e++)n+=t(e*o,e+"B");break;case"named-durations":for(let e=64;e>1;e/=2){let r=`1/${e}`;n+=t(`${r}t`,`${r}t`),n+=t(`${r}`,`${r}`),n+=t(`${r}d`,`${r}d`)}for(let e=1;e<=16;e++)n+=t(e+"B",e+"B");break;case"beats-per-measure":for(let e=1;e<=12;e++)n+=t(e,e+` beat${e>1?"s":""} per measure`);break;case"beats-per-minute":for(let e=40;e<=300;e+=10)n+=t(e,e+` beat${e>1?"s":""} per minute`);break;case"song-groups":case"groups":s&&s.instructions&&Object.keys(s.instructions).forEach(function(e,r){n+=t(e,e)});break;case"command-group-execute":s&&s.instructions&&Object.keys(s.instructions).forEach(function(e,r){n+=t("@"+e,"@"+e)});break;default:throw new Error("Invalid Value type: "+e)}return n}renderEditorFormOptions(e,t){let r="";return this.getValues(e,function(e,n,s=""){const o=!!t&&t(e);r+=`<option value="${e}" ${o?' selected="selected"':""}${s}>${n}</option>`}),r}format(e,t){switch(t){case"duration":let r;return this.getValues("durations",(t,n)=>{e!==t&&e!==n||(r=n)}),r?r:(e=parseFloat(e).toFixed(2)).replace(".00","t");case"instrument":return"number"!=typeof e?"N/A":e<10?"0"+e:""+e;case"velocity":return"number"!=typeof e?"N/A":100===e?"Max":e+"";case"command":return e;default:throw new Error("Unknown format: "+t)}}}"undefined"!=typeof module&&(module.exports={AudioSourceValues:AudioSourceValues});class AudioSourceLibraries{constructor(){}get sources(){return{MidiParser:[this.getScriptDirectory("assets/3rdparty/MidiParser/main.js"),"https://cdn.jsdelivr.net/gh/colxi/midi-parser-js/src/main.js"],LZString:[this.getScriptDirectory("assets/3rdparty/LZString/lz-string.min.js"),"https://cdn.jsdelivr.net/gh/pieroxy/lz-string/libs/lz-string.min.js"]}}getScriptElement(){return document.head.querySelector('script[src$="audio-source-composer-element.js"],script[src$="audio-source-composer.min.js"]')}getScriptDirectory(r=""){return this.getScriptElement().src.split("/").slice(0,-2).join("/")+"/"+r}async loadScript(r){await new Promise((i,t)=>{const e=document.createElement("script");e.src=r,e.onload=(r=>i()),document.head.appendChild(e)})}async loadLibrary(r,i=null){if(i||(i=(()=>void 0!==window[r])),i())return!0;const t=this.sources[r];for(let r=0;r<t.length;r++)if(await this.loadScript(t[r]),i())return!0;throw new Error(`Failed to load ${r} Library`)}async getMidiParser(){return void 0===window.MidiParser&&await this.loadLibrary("MidiParser"),window.MidiParser}async getLZString(){return void 0===window.LZString&&await this.loadLibrary("LZString"),window.LZString}}"undefined"!=typeof module&&(module.exports={AudioSourceLibraries:AudioSourceLibraries});class AudioSourceSong{constructor(t={},n=null){this.dispatchElement=n,this.audioContext=null,this.instruments={loaded:[],class:{},classPromises:{},promises:{}},this.seekLength=.5,this.playbackPosition=0,this.playbackStartTime=null,this.volumeGain=null,this.activeGroups={},this.songData={},this.loadSongData(t),this.songHistory=[],"undefined"!=typeof document&&document.addEventListener("instrument:loaded",t=>this.onSongEvent(t))}getAudioContext(){return this.audioContext?this.audioContext:(this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.audioContext)}getSongData(){return this.songData}getSongTimeDivision(){return this.songData.timeDivision||384}getGroupTimeDivision(t){return this.getSongTimeDivision()}getSongHistory(){return this.songHistory}getStartingBeatsPerMinute(){return this.songData.beatsPerMinute}getVolumeGain(){if(!this.volumeGain){const t=this.getAudioContext();let n=t.createGain();n.gain.value=AudioSourceSong.DEFAULT_VOLUME,n.connect(t.destination),this.volumeGain=n}return this.volumeGain}getVolume(){return this.volumeGain?100*this.volumeGain.gain.value:100*AudioSourceSong.DEFAULT_VOLUME}setVolume(t){const n=this.getVolumeGain();n.gain.value!==t&&(n.gain.value=t/100,console.info("Setting volume: ",t))}dispatchEvent(t){this.dispatchElement&&this.dispatchElement.dispatchEvent(t)}onSongEvent(t){switch(t.type){case"instrument:loaded":const n=t.detail.class,i=t.detail.url;this.instruments.class[i]=n,this.loadAllInstruments()}}loadSongData(t,n=null){t=Object.assign({},{instruments:[],instructions:{root:[]}},t),this.songData=t,Object.keys(t.instructions).map((t,n)=>this.processAllInstructionData(t));if(0===t.instruments.length);else for(let i=0;i<t.instruments.length;i++)t.instruments[i]&&(n&&(t.instruments[i].url=new URL(t.instruments[i].url,n)+""),0,this.loadInstrument(i));this.dispatchEvent(new CustomEvent("song:loaded"))}loadSongHistory(t){this.songHistory=t}processAllInstructionData(t){const n=this.songData.instructions[t];for(let t=0;t<n.length;t++){const i=n[t];n[t]=this.processInstructionData(i)}}processInstructionData(t){return SongInstruction.parse(t).data}getInstructions(t,n=null){let i=this.songData.instructions[t];if(!i)throw new Error("Instruction group not found: "+t);return n&&("number"==typeof n&&(n=[n]),i=i.filter((t,i)=>-1!==n.indexOf(i))),i.map(t=>new SongInstruction(t))}getInstructionIndex(t,n){n instanceof SongInstruction&&(n=n.data);const i=this.songData.instructions[t].indexOf(n);if(-1===i)throw new Error("Instruction not found in instruction list");return i}getInstruction(t,n,i=!0){let e=this.songData.instructions[t];if(!Number.isInteger(n)){if(i)throw new Error("Invalid Index: "+typeof n);return null}if(n>=e.length){if(i)throw new Error(`Instruction index is greater than group length: ${n} >= ${e.length} for groupName: ${t}`);return null}if(!e[n]){if(i)throw new Error(`Instruction not found at index: ${n} for groupName: ${t}`);return null}return new SongInstruction(e[n])}getIterator(t,n=null){return new InstructionIterator(this.songData.instructions[t],t,n?n.timeDivision:this.getSongTimeDivision(),n?n.currentBPM:this.getStartingBeatsPerMinute(),n?n.groupPositionInTicks:0)}eachInstruction(t,n,i=null){if(!this.songData.instructions[t])throw new Error("Invalid group: "+t);const e=this.getIterator(t,i);let s=e.nextInstruction();for(;s;){if(!1===n(e.groupIndex,s,e))break;s=e.nextInstruction()}return e.groupPlaybackTime}async eachInstructionAsync(t,n,i=null){if(!this.songData.instructions[t])throw new Error("Invalid group: "+t);const e=new InstructionIterator(this.songData.instructions[t],t,i?i.timeDivision:this.getSongTimeDivision(),i?i.currentBPM:this.getStartingBeatsPerMinute(),i?i.groupPositionInTicks:0);let s=e.nextInstruction();for(;s;){if(!1===await n(e.groupIndex,s,e))break;s=e.nextInstruction()}return e.groupPlaybackTime}rootGroup{return this.songData.root||"root"}getSongLength(){return this.getGroupLength(this.rootGroup)}getGroupLength(t){const n=this.getIterator(t);let i;for(;i=n.nextInstruction(););return n.groupPlaybackTime}getSongPositionFromTicks(t){return this.getGroupPositionFromTicks(this.rootGroup,t)}getGroupPositionFromTicks(t,n){let i=null;if(this.eachInstruction(t,(t,e,s)=>{if(i=s,s.groupPositionInTicks>=n)return!1}),!i)return 0;let e=i.groupPlaybackTime;if(n>i.groupPositionInTicks){const t=n-i.groupPositionInTicks;e+=this.ticksToSeconds(t,i.timeDivision,i.currentBPM)}else if(n<i.groupPositionInTicks){const t=i.groupPositionInTicks-n;e-=this.ticksToSeconds(t,i.timeDivision,i.currentBPM)}return e}getSongPositionInTicks(t){let n=null;if(this.eachInstruction(this.rootGroup,(i,e,s)=>{if(n=s,s.groupPlaybackTime>=t)return!1}),!n)return 0;let i=n.groupPositionInTicks;if(t>n.groupPlaybackTime){const e=t-n.groupPlaybackTime;i+=this.secondsToTicks(e,n.timeDivision,n.currentBPM)}else if(t<n.groupPlaybackTime){const e=n.groupPlaybackTime-t;i-=this.secondsToTicks(e,n.timeDivision,n.currentBPM)}return i}ticksToSeconds(t,n,i){return t/n*(60/i)}secondsToTicks(t,n,i){return Math.round(t*n/(60/i))}async play(){if(null!==this.playbackStartTime)throw new Error("Song is already playing");console.log("Start playback:",this.playbackPosition);const t=this.getSongPositionInTicks(this.playbackPosition);await this.initAllInstruments(this.getAudioContext()),this.playbackStartTime=this.getAudioContext().currentTime-this.playbackPosition;const n={startTime:this.playbackStartTime,position:this.playbackPosition,positionInTicks:t};this.dispatchEvent(new CustomEvent("song:play",{detail:n})),await this.playInstructions(this.rootGroup,this.playbackStartTime),null!==this.playbackStartTime&&this.stopPlayback(),this.dispatchEvent(new CustomEvent("song:end",{detail:n})),console.log("End playback:",this.playbackPosition)}get isPlaying(){return null!==this.playbackStartTime}get songPlaybackPosition(){return null!==this.playbackStartTime?this.getAudioContext().currentTime-this.playbackStartTime:this.playbackPosition}setPlaybackPositionInTicks(t){if(!Number.isInteger(t))throw new Error("Invalid start position in ticks");const n=this.getSongPositionFromTicks(t);return this.setPlaybackPosition(n)}setPlaybackPosition(t){this.playbackPosition=parseFloat(t)||0;const n=this.getSongPositionInTicks(this.playbackPosition);console.log("Seek position: ",this.playbackPosition,n);const i={position:this.playbackPosition,positionInTicks:n};this.dispatchEvent(new CustomEvent("song:seek",{detail:i}))}stopPlayback(){if(null==this.playbackStartTime)return void console.warn("Playback is already stopped");this.playbackPosition=this.getAudioContext().currentTime-this.playbackStartTime,this.playbackStartTime=null;const t=this.getSongPositionInTicks(this.playbackPosition);for(const t in this.activeGroups)this.activeGroups.hasOwnProperty(t)&&(this.activeGroups[t]=!1);const n=this.getInstrumentList();for(let t=0;t<n.length;t++){const n=this.getInstrument(t,!1);n&&n.stopPlayback&&n.stopPlayback()}const i={position:this.playbackPosition,positionInTicks:t};this.dispatchEvent(new CustomEvent("song:stop",{detail:i})),console.log("Stop position: ",this.playbackPosition)}isPlaybackActive(){for(const t in this.activeGroups)if(this.activeGroups.hasOwnProperty(t)&&!0===this.activeGroups[t])return!0;return!1}async playInstructions(t,n){const i=t+n;this.activeGroups[i]=!0,console.time("Group:"+t);const e=this.getAudioContext();n=n||e.currentTime;const s=[];await this.eachInstructionAsync(t,async(r,o,a)=>{if(!this.activeGroups[i])return!1;let u=e.currentTime-n;if(u+this.seekLength<a.groupPlaybackTime){const t=Math.floor(1e3*(a.groupPlaybackTime-(u+this.seekLength))*.9);await new Promise((n,i)=>{setTimeout(n,t)}),u=e.currentTime-n}if(o.isGroupCommand()){let i=o.getGroupFromCommand();if(!this.songData.instructions[i])throw new Error("Instruction groupName not found: "+i);if(i===t)return void console.error("Recursive group call. Skipping group '"+i+"'");const e=this.playInstructions(i,n+a.groupPlaybackTime);s.push(e)}else u<=a.groupPlaybackTime&&this.playInstruction(o,n+a.groupPlaybackTime,a)});for(let t=0;t<s.length;t++)await s[t];delete this.activeGroups[i],console.timeEnd("Group:"+t)}playInstructionAtIndex(t,n,i=null,e=null){const s=this.getInstruction(t,n,!1);s?this.playInstruction(s,i,e):console.warn("No instruction at index")}async playInstruction(t,n=null,i=null){if(Array.isArray(t)&&(t=new SongInstruction(t)),t.isGroupCommand())return await this.playInstructions(t.getGroupFromCommand(),n);let e=this.getStartingBeatsPerMinute(),s=this.getSongTimeDivision();const r=t.getDurationAsTicks(s)/s/(e/60),o={currentTime:this.getAudioContext().currentTime,startTime:n,duration:r,instruction:t};i&&(i.currentBPM&&(o.currentBPM=i.currentBPM),i.groupIndex&&(o.groupIndex=i.groupIndex),i.groupPositionInTicks&&(o.groupPositionInTicks=i.groupPositionInTicks)),n||0===n||(n=this.getAudioContext().currentTime),this.playInstrument(t.instrument,t.command,n,r,t.velocity);let a=this.getAudioContext().currentTime;n>a&&await new Promise((t,i)=>{setTimeout(()=>{t()},1e3*(n-a))}),this.dispatchEvent(new CustomEvent("note:start",{detail:o})),a=this.getAudioContext().currentTime,r&&(await new Promise((t,i)=>{setTimeout(()=>{t()},1e3*(n-a+r))}),this.dispatchEvent(new CustomEvent("note:end",{detail:o})))}playInstrument(t,n,i,e,s){if(t||0===t||(console.warn("No instrument set for instruction. Using instrument 0"),t=0),!this.songData.instruments[t])return void console.error(`Instrument ${t} is not loaded. Playback skipped. `);let r=this.getInstrument(t);const o=this.getVolumeGain();return r.play(o,n,i,e,s)}getInstrumentConfig(t,n=!0){const i=this.getInstrumentList();if(i[t])return i[t];if(n)throw new Error("Instrument ID not found: "+t);return null}getInstrument(t,n=!0){if(this.instruments.loaded[t])return this.instruments.loaded[t];if(n)throw new Error("Instrument not yet loaded: "+t);return null}getInstrumentList(){return this.data.instruments.slice()}async loadInstrumentClass(t){t=new URL(t)+"";let n=this.instruments.class[t];if(n)return n;let i=this.instruments.classPromises[t];return i||(i=new Promise((n,i)=>{const e=document.createElement("script");let s=(new Date).getTime(),r=10;const o=()=>{setTimeout(()=>this.instruments.class[t]?(n(this.instruments.class[t]),void delete this.instruments.classPromises[t]):(new Date).getTime()>s+25e3?(i("Unable to load: "+t),delete this.instruments.classPromises[t],void e.parentNode.removeChild(e)):(r*=2,void o()),r)};o(),e.onerror=(n=>{i("Error loading: "+t),delete this.instruments.classPromises[t],e.parentNode.removeChild(e)}),e.src=t,document.head.appendChild(e)}),this.instruments.classPromises[t]=i),await i}async loadInstrument(t,n=!1){if(t=parseInt(t),!n&&this.instruments.loaded[t])return!0;this.instruments.loaded[t]=null;const i=this.getInstrumentConfig(t);if(!i.url)throw new Error("Invalid instrument URL");let e=new URL(i.url,document.location.origin);const s=new(await this.loadInstrumentClass(e))(i,this);return this.instruments.loaded[t]=s,this.dispatchEvent(new CustomEvent("instrument:instance",{detail:{instance:s,instrumentID:t},bubbles:!0})),this.audioContext&&this.initInstrument(t,this.audioContext),!0}loadAllInstruments(){const t=this.getInstrumentList();for(let n=0;n<t.length;n++)t[n]&&this.loadInstrument(n)}async initInstrument(t,n){const i=this.getInstrument(t);await i.init(n)}async initAllInstruments(t){console.time("initAllInstruments");const n=this.getInstrumentList();for(let i=0;i<n.length;i++){const n=this.getInstrument(i,!1);n&&await n.init(t)}console.timeEnd("initAllInstruments")}generateInstructionGroupName(t){const n=this.data;let i;for(let e=99;e>=0;e--){const s=t+"."+e;n.instructions.hasOwnProperty(s)||(i=s)}if(!i)throw new Error("Failed to generate group name");return i}setSongTitle(t){return this.replaceDataPath("title",t)}setSongVersion(t){return this.replaceDataPath("version",t)}addInstrument(t){if("object"!=typeof t&&(t={url:t}),!t.url)throw new Error("Invalid Instrument URL");const n=this.songData.instruments.length;return this.replaceDataPath(["instruments",n],t),this.loadInstrument(n),this.dispatchEvent(new CustomEvent("instrument:modified",{bubbles:!0,detail:{instrumentID:n,config:t,oldConfig:null}}),1),n}replaceInstrument(t,n){const i=this.songData.instruments;if(i.length<t)throw new Error("Invalid instrument ID: "+t);const e=i[t];"object"!=typeof n&&(n={url:n}),e&&e.name&&!n.name&&(n.name=e.name);const s=this.replaceDataPath(["instruments",t],n);return this.dispatchEvent(new CustomEvent("instrument:modified",{bubbles:!0,detail:{instrumentID:t,config:n,oldConfig:s}}),1),this.loadInstrument(t),s}removeInstrument(t){if(!this.songData.instruments[t])throw new Error("Invalid instrument ID: "+t);delete this.instruments.loaded[t];const n=this.replaceDataPath(["instruments",t],null);return this.dispatchEvent(new CustomEvent("instrument:modified",{bubbles:!0,detail:{instrumentID:t,config:null,oldConfig:n}}),1),n}replaceInstrumentParam(t,n,i){if(t=parseInt(t),!this.songData.instruments[t])throw new Error("Invalid instrument ID: "+t);return Array.isArray(n)||(n=[n]),n.unshift(t),n.unshift("instruments"),this.replaceDataPath(n,i)}deleteInstrumentParam(t,n){if(t=parseInt(t),!this.songData.instruments[t])throw new Error("Invalid instrument ID: "+t);return Array.isArray(n)||(n=[n]),n.unshift(t),n.unshift("instruments"),this.deleteDataPath(n)}isInstrumentLoaded(t){return!!this.instruments.loaded[t]}applyHistoryActions(t){for(let n=0;n<t.length;n++){const i=t[n];switch(i.action){case"reset":Object.assign(this.songData,i.data);break;case"insert":this.insertDataPath(i.path,i.data);break;case"delete":this.deleteDataPath(i.path);break;case"replace":this.replaceDataPath(i.path,i.data)}}this.songHistory=[],this.processAllInstructionData()}findDataPath(t){if(!Array.isArray(t))throw new Error("Path list must be an array");if("*"===t[0])return{value:this.songData,parent:{key:this.songData},key:"key"};let n,i=this.songData,e=null;for(let s=0;s<t.length;s++)e=t[s],/^\d+$/.test(e)&&(e=parseInt(e)),n=i,i=i[e];if(!n)throw new Error("Invalid path: "+path);return{value:i,parent:n,key:e}}insertDataPath(t,n){const i=this.findDataPath(t);if(n=AudioSourceSong.sanitizeInput(n),"number"!=typeof i.key)throw new Error("Insert action requires numeric key");if(i.parent.length<i.key)throw new Error(`Insert position out of index: ${i.parent.length} < ${i.key} for path: ${t}`);return i.parent.splice(i.key,0,n),this.queueHistoryAction(t,n),null}deleteDataPath(t){const n=this.findDataPath(t),i=n.parent[n.key];if("number"==typeof n.key){if(n.parent.length<n.key)throw new Error(`Delete position out of index: ${n.parent.length} < ${n.key} for path: ${t}`);n.parent.splice(n.key,1)}else delete n.parent[n.key];return this.queueHistoryAction(t,null,i),i}replaceDataPath(t,n){const i=this.findDataPath(t);if(void 0===n)return this.deleteDataPath(t);let e=null;return n=AudioSourceSong.sanitizeInput(n),void 0!==i.parent[i.key]&&(e=i.parent[i.key]),i.parent[i.key]=n,this.queueHistoryAction(t,n,e),e}queueHistoryAction(t,n=null,i=null){const e=[t];return null===n&&null===i||e.push(n),null!==i&&e.push(i),this.songHistory.push(e),this.dispatchEvent(new CustomEvent("song:modified",{detail:e}),1),e}insertInstructionAtPosition(t,n,i){if("string"==typeof n&&(n=SongInstruction.parseDurationAsTicks(n,this.getSongTimeDivision())),!Number.isInteger(n))throw new Error("Invalid integer: "+typeof n);if(!i)throw new Error("Invalid insert instruction");const e=SongInstruction.parse(i);let s=this.songData.instructions[t];const r=new InstructionIterator(this.songData.instructions[t],t,this.getSongTimeDivision());let o;for(;o=r.nextInstruction();){if(r.groupPositionInTicks>n){const i=[n-(r.groupPositionInTicks-o.deltaDuration),r.groupPositionInTicks-n],s=r.groupIndex;return this.replaceInstructionDeltaDuration(t,s,i[1]),e.deltaDuration=i[0],this.insertInstructionAtIndex(t,s,e),s}if(r.groupPositionInTicks===n){let n;for(n=r.groupIndex+1;n<s.length&&!(new SongInstruction(s[n]).deltaDuration>0);n++);return e.deltaDuration=0,this.insertInstructionAtIndex(t,n,e),n}}if(r.groupPositionInTicks>=n)throw new Error("Something went wrong");let a=s.length;return e.deltaDuration=n-r.groupPositionInTicks,this.insertInstructionAtIndex(t,a,e),a}insertInstructionAtIndex(t,n,i){if(!i)throw new Error("Invalid insert instruction");i=SongInstruction.parse(i).data,this.insertDataPath(["instructions",t,n],i)}deleteInstructionAtIndex(t,n){const i=this.getInstruction(t,n);if(i.deltaDuration>0){const e=this.getInstruction(t,n+1,!1);e&&this.replaceInstructionDeltaDuration(t,n+1,e.deltaDuration+i.deltaDuration)}return this.deleteDataPath(["instructions",t,n])}replaceInstructionDeltaDuration(t,n,i){return this.replaceInstructionParam(t,n,0,i)}replaceInstructionCommand(t,n,i){return this.replaceInstructionParam(t,n,1,i)}replaceInstructionInstrument(t,n,i){return this.replaceInstructionParam(t,n,2,i)}replaceInstructionDuration(t,n,i){return this.replaceInstructionParam(t,n,3,i)}replaceInstructionVelocity(t,n,i){if(!Number.isInteger(i))throw new Error("Velocity must be an integer: "+i);if(i<0)throw new Error("Velocity must be a positive integer: "+i);return this.replaceInstructionParam(t,n,4,i)}replaceInstructionParam(t,n,i,e){return null===e?this.deleteDataPath(["instructions",t,n,i]):this.replaceDataPath(["instructions",t,n,i],e)}addInstructionGroup(t,n){if(this.songData.instructions.hasOwnProperty(t))throw new Error("New group already exists: "+t);this.replaceDataPath(["instructions",t],n||[])}removeInstructionGroup(t){if("root"===t)throw new Error("Cannot remove root instruction group, n00b");if(!this.songData.instructions.hasOwnProperty(t))throw new Error("Existing group not found: "+t);return this.replaceDataPath(["instructions",t])}renameInstructionGroup(t,n){if("root"===t)throw new Error("Cannot rename root instruction group, n00b");if(!this.songData.instructions.hasOwnProperty(t))throw new Error("Existing group not found: "+t);if(this.songData.instructions.hasOwnProperty(n))throw new Error("New group already exists: "+n);const i=this.replaceDataPath(["instructions",t]);this.replaceDataPath(["instructions",n],i)}static sanitizeInput(t){if(Array.isArray(t)){for(let n=0;n<t.length;n++)t[n]=AudioSourceSong.sanitizeInput(t[n]);return t}if("object"==typeof t){for(const n in t)t.hasOwnProperty(n)&&(t[n]=AudioSourceSong.sanitizeInput(t[n]));return t}if("string"!=typeof t)return t;if("undefined"!=typeof require){var n=new(require("bad-words"));if(n.isProfane(t))throw new Error("Swear words are forbidden");t=n.clean(t)}var i={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};return t.replace(/[&<>'"]/g,function(t){return i[t]})}onInput(t){t.defaultPrevented||t.type}}AudioSourceSong.DEFAULT_VOLUME=.7;class SongInstruction{constructor(t){this.data=t||[0,"",0]}get deltaDuration(){return this.data[0]}set deltaDuration(t){this.data[0]=SongInstruction.parseDurationAsTicks(t)}get command(){return this.data[1]||null}set command(t){this.data[1]=t}get instrument(){return void 0===this.data[2]?null:this.data[2]}set instrument(t){if(t=parseInt(t),Number.isNaN(t))throw new Error("Invalid Instrument ID");this.data[2]=t}get duration(){return void 0===this.data[3]?null:this.data[3]}set duration(t){if(t=parseFloat(t),Number.isNaN(t))throw new Error("Invalid Duration");this.data[3]=t}getDurationAsTicks(t){return SongInstruction.parseDurationAsTicks(this.duration,t)}get velocity(){return void 0===this.data[4]?null:this.data[4]}set velocity(t){if(t=parseInt(t),Number.isNaN(t))throw new Error("Invalid Velocity");this.data[4]=t}get panning(){return void 0===this.data[5]?null:this.data[5]}set panning(t){if(t=parseInt(t),Number.isNaN(t))throw new Error("Invalid Panning");this.data[5]=t}isGroupCommand(){return this.command&&"@"===this.command[0]}getGroupFromCommand(){return this.command.substr(1)}static parse(t){return t instanceof SongInstruction?t:("number"==typeof t?t=[t]:"string"==typeof t&&(t=t.split(":")).length>=2&&(t[1]=parseInt(t[1])),"string"==typeof t[0]&&t.unshift(0),new SongInstruction(t))}static parseDurationAsTicks(t,n){if(null===t||"number"==typeof t)return t;switch(t[t.length-1].toLowerCase()){case"t":return parseInt(t.substr(0,t.length-1));case"b":return n*parseFloat(t.substr(0,t.length-1))}throw new Error("Invalid Duration: "+t)}}class InstructionIterator{constructor(t,n,i,e=160,s=0){this.instructionList=t,this.groupName=n,this.timeDivision=i,this.currentBPM=e,this.lastRowGroupStartPositionInTicks=s,this.groupPositionInTicks=s,this.groupPlaybackTime=0,this.groupIndex=-1}currentInstruction(){const t=this.instructionList[this.groupIndex];if(!t)return null;const n=new SongInstruction(t);return n.index=this.groupIndex,n.positionInTicks=this.groupPositionInTicks,n}nextInstruction(){if(this.groupIndex++,!this.instructionList[this.groupIndex])return null;let t;if((t=this.currentInstruction()).deltaDuration){this.groupPositionInTicks+=t.deltaDuration;const n=t.deltaDuration/this.timeDivision/(this.currentBPM/60);this.groupPlaybackTime+=n}return t}nextInstructionRow(){let t;if(this.lastRowGroupStartPositionInTicks=this.groupPositionInTicks,-1===this.groupIndex){if((t=this.nextInstruction())&&t.deltaDuration)return[]}else t=this.currentInstruction();const n=[];t&&n.push(t);for(let i=0;i<1e3;i++){if(!(t=this.nextInstruction()))return 0===n.length?null:n;if(t.deltaDuration)return n;n.push(t)}throw new Error("Recursion limit")}}if("undefined"!=typeof module){module.exports={AudioSourceSong:AudioSourceSong};class t{constructor(t,n){}}global.CustomEvent=t}class AudioSourceStorage{constructor(){}async getRecentSongList(){return await this.decodeForStorage(localStorage.getItem("song-recent-list")||"[]")}generateTitle(){return`Untitled (${(new Date).toJSON().slice(0,10).replace(/-/g,"/")})`}generateGUID(){var e=(new Date).getTime();return"undefined"!=typeof performance&&"function"==typeof performance.now&&(e+=performance.now()),"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var o=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"===t?o:3&o|8).toString(16)})}generateDefaultSong(e=null){const t={name:this.generateTitle(),guid:this.generateGUID(),version:"0.0.1",root:"root",created:(new Date).getTime(),timeDivision:384,beatsPerMinute:120,beatsPerMeasure:4,instruments:[],instructions:{root:[]}};return e&&t.instruments.push({url:e}),t}async encodeForStorage(e,t=null,o=null){let r=JSON.stringify(e,t,o);const n=new AudioSourceLibraries;return(await n.getLZString()).compress(r)}async decodeForStorage(e){if(!e)return null;const t=new AudioSourceLibraries;return e=(await t.getLZString()).decompress(e)||e,JSON.parse(e)}async saveSongToMemory(e,t){e.guid||(e.guid=this.generateGUID());let o=[];try{o=await this.decodeForStorage(localStorage.getItem("song-recent-list")||"[]")}catch(e){console.error(e)}(o=o.filter(t=>t.guid!==e.guid)).unshift({guid:e.guid,title:e.name}),localStorage.setItem("song-recent-list",await this.encodeForStorage(o)),localStorage.setItem("song:"+e.guid,await this.encodeForStorage(e)),localStorage.setItem("song-history:"+e.guid,await this.encodeForStorage(t)),console.info("Song saved to memory: "+e.guid,e)}saveSongToFile(e,t=!0){const o="/** INSTRUCTIONS-"+this.generateGUID()+" **/";let r=JSON.stringify(e.instructions),n=JSON.stringify(Object.assign({},e,{instructions:o}),null,"\t");n=n.replace('"'+o+'"',r);const a="data:text/json;charset=utf-8,"+encodeURIComponent(n),i=document.createElement("a");i.setAttribute("href",a);let s=(e.name||"untitled").replace(/\s+/g,"_")+".json";if(t&&(s=window.prompt("Download as file?",s)),!s)return console.warn("Download canceled");i.setAttribute("download",s),document.body.appendChild(i),i.click(),i.remove()}async loadSongFromMemory(e){let t=localStorage.getItem("song:"+e);if(!t)throw new Error("Song Data not found for guid: "+e);let o=await this.decodeForStorage(t);if(!o)throw new Error("Invalid Song Data: "+t);return o}async loadSongHistoryFromMemory(e){let t=localStorage.getItem("song-history:"+e);return t?await this.decodeForStorage(t):null}async loadJSONFile(e){const t=await new Promise((t,o)=>{let r=new FileReader;r.readAsText(e),r.onload=(e=>{t(e.target.result)})});return JSON.parse(t)}}"undefined"!=typeof module&&(module.exports={AudioSourceStorage:AudioSourceStorage});class MIDISupport{constructor(){}getCommandFromMIDINote(e){const t=Math.floor(e/12),o=e%12;return(new AudioSourceValues).noteFrequencies[o]+t}async loadMIDIFile(e){const t=new AudioSourceLibraries,o=await t.getMidiParser(),n=await new Promise((t,o)=>{let n=new FileReader;n.readAsArrayBuffer(e),n.onload=(e=>{t(e.target.result)})}),a=o.parse(new Uint8Array(n));return console.info("MIDI Data Loaded: ",a),a}async loadSongFromMidiFile(e,t=null){const o=await this.loadMIDIFile(e);return this.loadSongFromMIDIData(o,t)}loadSongFromMIDIData(e,t=null){const o={root:[]};let n=(new AudioSourceStorage).generateDefaultSong();n.instructions=o,n.timeDivision=e.timeDivision;const a=new AudioSourceSong(n);let r=0;for(let o=0;o<e.track.length;o++){const i="root",s={},l=e.track[o].event;let c=0,u=0,d=!1,m="Track "+o;for(let e=0;e<l.length;e++){const t=l[e];switch(t.type){case 8:case 9:d=!0;break;case 255:switch(t.metaType){case 3:m=t.data.trim()}}}if(!d){console.info("Skipping empty track: ",o,l);continue}const I=r++;t&&(n.instruments[I]={url:t+"",name:m});for(let e=0;e<l.length;e++){const t=l[e];switch(c+=t.deltaTime,t.type){case 8:let e=this.getCommandFromMIDINote(t.data[0]);if(s[e]){const o=s[e][0],n=s[e][1];let r=c-o;delete s[e],a.replaceInstructionDuration(i,n,r),console.log("OFF",o,t.deltaTime,e,r)}break;case 9:let o=this.getCommandFromMIDINote(t.data[0]),n=t.data[1];if(0===n&&s[o]){s[e][0];const n=s[e][1];let r=c-u;a.replaceInstructionDuration(i,n,r),console.log("OFF",u,t.deltaTime,o,r),delete s[o];break}u=c;const r=[0,o,I,0,n],l=a.insertInstructionAtPosition(i,c,r);s[o]=[c,l],console.log("ON ",c,o,n)}}}return a.data}}})();